//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <LunaKit/LKTile.h>

@class NSArray, NSDate, NSDictionary, NSMutableArray, NSProgressIndicator, NSString, NSTextField, NSTrackingArea, NSView, PETaskActionButton;

@interface PEBackgroundTaskTile : LKTile
{
    NSTextField *_titleText;
    NSView *_actionView;
    NSTextField *_pausedText;
    NSTextField *_waitingText;
    NSTextField *_progressText;
    NSProgressIndicator *_progressBar;
    PETaskActionButton *_pauseResumeButton;
    PETaskActionButton *_cancelShowButton;
    NSTextField *_timeRemainingText;
    NSString *_title;
    NSView *_tasksView;
    NSMutableArray *_tasks;
    double _progress;
    BOOL _paused;
    BOOL _ready;
    BOOL _showElementsAffectedByTracking;
    NSDate *_startProcessingDate;
    NSTrackingArea *_tileTrackingArea;
    NSArray *_originalPendingJobNames;
    unsigned long long _originalPendingJobNameIndex;
    BOOL _waiting;
    NSDictionary *_textLabelAttributes;
    NSDictionary *_subtitleTextLabelAttributes;
    NSDictionary *_timeRemainingTextLabelAttributes;
}

@property(readonly, nonatomic) NSDictionary *timeRemainingTextLabelAttributes; // @synthesize timeRemainingTextLabelAttributes=_timeRemainingTextLabelAttributes;
@property(readonly, nonatomic) NSDictionary *subtitleTextLabelAttributes; // @synthesize subtitleTextLabelAttributes=_subtitleTextLabelAttributes;
@property(readonly, nonatomic) NSDictionary *textLabelAttributes; // @synthesize textLabelAttributes=_textLabelAttributes;
@property(getter=isReady) BOOL ready; // @synthesize ready=_ready;
@property(getter=isWaiting) BOOL waiting; // @synthesize waiting=_waiting;
@property(getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain) NSString *title; // @synthesize title=_title;
- (id)_humanReadableTimeRemaining:(double)arg1;
- (BOOL)shouldShowTimeRemaining;
- (BOOL)_isProcessingCurrentPendingJob;
- (void)_updateElementsAffectedByTracking;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)didRemoveFromTileView;
- (void)willRemoveFromTileView;
- (void)cancelShowTasks:(id)arg1;
- (void)pauseResumeTasks:(id)arg1;
- (BOOL)shouldHandleMouseDown:(id)arg1;
- (void)updateUI;
- (void)updateActionView;
- (BOOL)_canCancelTask:(id)arg1;
- (BOOL)_canPauseTask:(id)arg1;
- (BOOL)isIdle;
- (id)tasks;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithPendingJob:(unsigned long long)arg1 task:(id)arg2;
- (id)initWithSingleTask:(id)arg1;

@end

