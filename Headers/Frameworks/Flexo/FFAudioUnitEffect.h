//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Flexo/FFEffect.h>

@class FFAnchoredObject, FFSharedAudioUnit, NSDictionary;

@interface FFAudioUnitEffect : FFEffect
{
    FFSharedAudioUnit *_cachedUnit;
    BOOL _isSyncingChannelsToParameters;
    NSDictionary *_effectState;
    NSDictionary *_preset;
    NSDictionary *_defaultPreset;
    BOOL _presetDirty;
    unsigned int _numChannels;
    double _sampleRate;
    _Bool _initOnceSetStackHasBeenCalled;
    BOOL _savingCurrentEffectState;
    NSDictionary *_parameterInfoMap;
    FFAnchoredObject *_observedObject;
}

+ (void)clearAllCachedUnits;
+ (BOOL)isPreset:(id)arg1 equalToPreset:(id)arg2;
+ (void)initialize;
+ (id)copyClassDescription;
+ (id)_edelEffectBundle;
+ (id)audioUnitManufacturers;
+ (void)runDeferredRegistration;
+ (void)_warnValidationFailed:(unsigned long long)arg1 failedNames:(id)arg2;
+ (void)registerSharedAudioUnits;
+ (void)registerSurroundPanner;
+ (BOOL)scannerClientLoadBundle:(id)arg1 atPath:(id)arg2;
+ (void)registerEffectForOldStyleComponent:(struct ComponentRecord *)arg1;
+ (void)registerEffectForComponent:(struct OpaqueAudioComponent *)arg1;
+ (void)registerEffectForComponentDescription:(const struct AudioComponentDescription *)arg1;
+ (void)registerEffectForComponent:(struct OpaqueAudioComponent *)arg1 withDescription:(const struct AudioComponentDescription *)arg2;
+ (id)effectTypeForComponentType:(unsigned int)arg1;
+ (id)displayStringForEffectType:(id)arg1;
+ (id)registeredEffectIDsSupportingChannelsInput:(unsigned long long)arg1 output:(unsigned long long)arg2;
+ (unsigned long long)numEffectChannelsForNonNativeSupportForEffectWithID:(id)arg1 numRequestedInputChannels:(unsigned long long)arg2 numRequestedOutputChannels:(unsigned long long)arg3;
+ (BOOL)effectWithID:(id)arg1 supportsChannelsInput:(unsigned long long)arg2 output:(unsigned long long)arg3;
+ (BOOL)effectWithID:(id)arg1 supportsChannelsInput:(unsigned long long)arg2 output:(unsigned long long)arg3 nativeSupportOnly:(BOOL)arg4;
+ (id)effectIdentifierForComponentDescription:(const struct AudioComponentDescription *)arg1;
+ (id)effectIdentifierForType:(unsigned int)arg1 subType:(unsigned int)arg2 manufacturer:(unsigned int)arg3;
+ (id)effectIdentifierWithTypeString:(id)arg1 subType:(id)arg2 manufacturer:(id)arg3;
+ (struct OpaqueAudioComponent *)componentForEffectIdentifier:(id)arg1;
+ (id)loggingStringForEffectID:(id)arg1;
+ (id)loggingStringForEffectID:(id)arg1 includeName:(BOOL)arg2;
+ (BOOL)componentDescription:(struct AudioComponentDescription *)arg1 forEffectIdentifier:(id)arg2;
+ (BOOL)update_disableAudioUnitEffectClumpFolderResetForEffectStack:(id)arg1;
+ (BOOL)update_useRelativeAudioPresetPathForEffectStack:(id)arg1;
+ (void)_refreshEffectStackOnMainThread:(id)arg1;
+ (unsigned int)unmapParameterID:(unsigned int)arg1;
+ (unsigned int)mapParameterID:(unsigned int)arg1;
@property(nonatomic) BOOL presetDirty; // @synthesize presetDirty=_presetDirty;
@property(readonly) unsigned int numChannels; // @synthesize numChannels=_numChannels;
@property(readonly) double sampleRate; // @synthesize sampleRate=_sampleRate;
- (id)exportAsXMLElementWithDeprecatedEffectData:(id)arg1;
- (id)exportAsXMLElement;
- (id)exportAsXMLElementWithExcludedChannels:(id)arg1;
- (void)loadEffectWithXMLElement:(id)arg1;
- (id)parameterInfoMap;
- (void)setParameterInfoMap:(id)arg1;
- (id)keyframeableChannels;
- (id)keyframeableChannelsFrom:(id)arg1;
- (id)primaryAnimationChannel;
- (id)cachedAudioUnit;
- (void)effectStackAnchoredObjectDidChange;
- (void)effectWasRemovedFromStack;
- (void)effectWasReloadedToStack;
- (void)effectWasAddedToStack;
- (void)setEffectStack:(id)arg1;
- (void)_removeAnchoredObjectObserving;
- (void)_addAnchoredObjectObserving;
- (void)_updateObjectAudioProperties;
- (void)clearCachedUnit;
- (void)_clearCachedUnitDuringDealloc:(BOOL)arg1;
- (int)saveCurrentEffectState;
- (id)effectState;
- (void)setEffectStateWithNoUpdate:(id)arg1;
- (void)setEffectState:(id)arg1;
- (int)presetID;
- (void)setPresetWithID:(int)arg1;
- (void)resetToCurrentPreset;
- (void)resetToDefaultPreset;
- (void)setAudioUnitEffectStateAsPreset:(id)arg1;
- (id)defaultPreset;
- (id)preset;
- (void)setPreset:(id)arg1;
- (void)switchToPreset:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_postInit:(id)arg1;
- (void)_decodeFromCoder:(id)arg1 into:(id)arg2;
- (void)_copyWithZone:(struct _NSZone *)arg1 into:(id)arg2;
- (void)dealloc;
- (id)initWithEffectID:(id)arg1;
@property(readonly) double audioSampleRate;
@property(readonly) unsigned int audioChannelCount;
- (void)channelParameterChanged:(id)arg1;
- (void)_parameterChannelChanged:(id)arg1;
- (void)_updateParameterListUsingUnit:(struct ComponentInstanceRecord *)arg1;
- (BOOL)_fixupChannelsForChangedParameterList:(const struct FFAudioUnitParameterList *)arg1 unit:(struct ComponentInstanceRecord *)arg2;
- (void)_refreshEffectStack;
- (void)createChannelsInFolder:(id)arg1;
- (unsigned int)makeParameterChannelsForAudioUnit:(struct ComponentInstanceRecord *)arg1 withinFolder:(id)arg2;
- (id)createClumpFolderWithClumpID:(unsigned int)arg1 inFolder:(id)arg2 forAudioUnit:(struct ComponentInstanceRecord *)arg3;
- (id)newChannelForParamInfo:(const struct FFAudioUnitParameterInfo *)arg1 usingAudioUnit:(struct ComponentInstanceRecord *)arg2;
- (void)_updateParameterInfoMap:(id)arg1;
- (BOOL)setXMLPresetPath:(id)arg1 forPresetType:(int)arg2;
- (int)setFilePresetPath:(id)arg1 forFilePresetType:(int)arg2;
- (int)setFactoryPreset:(int)arg1;
- (void *)_newAuPresetFromPst:(id)arg1;
- (int)savePresetNamed:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2;
- (id)getFilePresets;
- (id)fullPathForPresetPath:(id)arg1 forFilePresetType:(int)arg2;
- (id)presetsForFilePresetType:(int)arg1;
- (id)presetsForFilePresetType:(int)arg1 startingPath:(id)arg2;
- (id)rootFolderForFilePresetType:(int)arg1;
- (id)parameterFolder;
- (void)syncChannelsToParameters;
- (void)syncChannelsToParametersFromFolder:(id)arg1 isCreatingChannelFolder:(BOOL)arg2;
- (id)newChannelFolderWithParent:(id)arg1 name:(id)arg2;

@end

