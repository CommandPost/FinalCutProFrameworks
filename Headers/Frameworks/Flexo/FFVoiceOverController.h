//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class FFAnchoredObject, FFAnchoredStack, FFContext, FFMediaEventProject, FFPlayer, FFPlayerVideoModule, NSCountedSet, NSMapTable, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer;

@interface FFVoiceOverController : NSObject
{
    FFPlayerVideoModule *_videoModule;
    NSCountedSet *_meterObservers;
    unsigned long long _meterObserverCount;
    NSTimer *_meteringTimer;
    NSTimer *_timelineAnimationTimer;
    struct VoiceOverPlayerState _playerState;
    int _countdownStyle;
    unsigned int _prerollTimeInSeconds;
    id _delegate;
    BOOL _isSystemSettingInput;
    BOOL _isSystemSettingOutput;
    BOOL _muteProject;
    FFContext *_voiceOverContext;
    double _lastVoiceOverContextRate;
    FFPlayer *_voiceOverPlayer;
    struct FFAudioRecorder *_audioRecorder;
    struct FFAudioBeepsPlaybackUnit *_countdownBeepsPlaybackUnit;
    NSMapTable *_cachedUserDefaults;
    unsigned int _listenerInputDeviceID;
    unsigned int _listenerOutputDeviceID;
    NSMutableSet *_inputFormatListenerStreamIDSet;
    NSMutableSet *_outputFormatListenerStreamIDSet;
    CDUnknownBlockType _listenerBlock;
    NSMutableDictionary *_deviceListeners;
    struct FFLocklessQueue<NSArray *> *_propertyChangedAddressInfoQueue;
    id _observedTimelineObject;
    BOOL _voiceoverDisabled;
    BOOL _startingRecord;
    BOOL _stoppingRecord;
    BOOL _isRecording;
    NSNumber *_userMonitoringGain;
    NSString *_customFilename;
    BOOL _multiTakeActive;
    BOOL _multiTakeEnabled;
    BOOL _firstMultitake;
    BOOL _observingAppHideUnhide;
    BOOL _observingAppMinimize;
    FFAnchoredObject *_currentTake;
    FFAnchoredObject *_previousTake;
    FFAnchoredObject *_animationObject;
    FFAnchoredStack *_multiTakeClip;
    FFMediaEventProject *_previousEvent;
    FFAnchoredObject *_gapClip;
    CDStruct_1b6d18a9 _prerolledTime;
    CDStruct_1b6d18a9 _previousTime;
    CDStruct_1b6d18a9 _playheadTime;
}

+ (BOOL)isDisabledActionForRecording:(SEL)arg1;
+ (BOOL)hasActiveRecording;
+ (void)configureOutputPopUpButton:(id)arg1 includeChannelSubmenu:(BOOL)arg2 includeNoneOption:(BOOL)arg3 action:(SEL)arg4;
+ (void)configureInputPopUpButton:(id)arg1 includeChannelSubmenu:(BOOL)arg2 action:(SEL)arg3;
+ (void)_configurePopUpButton:(id)arg1 usingDeviceInfoDictionary:(id)arg2 includeChannelSubmenu:(BOOL)arg3 includeNoneOption:(BOOL)arg4 action:(SEL)arg5 input:(BOOL)arg6;
@property(nonatomic) BOOL observingAppMinimize; // @synthesize observingAppMinimize=_observingAppMinimize;
@property(nonatomic) BOOL observingAppHideUnhide; // @synthesize observingAppHideUnhide=_observingAppHideUnhide;
@property(retain, nonatomic) FFAnchoredObject *gapClip; // @synthesize gapClip=_gapClip;
@property(retain, nonatomic) FFMediaEventProject *previousEvent; // @synthesize previousEvent=_previousEvent;
@property(retain, nonatomic) FFAnchoredStack *multiTakeClip; // @synthesize multiTakeClip=_multiTakeClip;
@property(retain, nonatomic) FFAnchoredObject *animationObject; // @synthesize animationObject=_animationObject;
@property(retain, nonatomic) FFAnchoredObject *previousTake; // @synthesize previousTake=_previousTake;
@property(retain, nonatomic) FFAnchoredObject *currentTake; // @synthesize currentTake=_currentTake;
@property(nonatomic) BOOL firstMultitake; // @synthesize firstMultitake=_firstMultitake;
@property(nonatomic) BOOL multiTakeEnabled; // @synthesize multiTakeEnabled=_multiTakeEnabled;
@property(nonatomic) BOOL multiTakeActive; // @synthesize multiTakeActive=_multiTakeActive;
@property(nonatomic) unsigned int prerollTimeInSeconds; // @synthesize prerollTimeInSeconds=_prerollTimeInSeconds;
@property(readonly, nonatomic) CDStruct_1b6d18a9 playheadTime; // @synthesize playheadTime=_playheadTime;
@property(nonatomic) CDStruct_1b6d18a9 previousTime; // @synthesize previousTime=_previousTime;
@property(nonatomic) CDStruct_1b6d18a9 prerolledTime; // @synthesize prerolledTime=_prerolledTime;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL startingRecord; // @synthesize startingRecord=_startingRecord;
- (void)_reloadTimelineViewWithNewClips:(id)arg1 modifiedClips:(id)arg2 removedClips:(id)arg3;
- (BOOL)canStartRecording;
- (void)context:(id)arg1 didRebuildPlayer:(id)arg2;
- (void)context:(id)arg1 willTeardownPlayer:(id)arg2;
- (void)_notifyRecordingHasStopped;
- (void)_notifyRecordingHasStarted;
- (void)_notifyCanStartRecordingStateMayHaveChanged;
- (id)voiceOverContext;
- (void)setVoiceOverContext:(id)arg1;
- (BOOL)_setVoiceOverPlayer:(id)arg1 doNotifyIfChanged:(BOOL)arg2;
- (void)timeRateChangedForContext:(id)arg1;
- (void)audioPlaybackStateChanged:(id)arg1;
- (void)_notifyToHaltRecording;
- (void)removeMeterObserver:(id)arg1;
- (void)addMeterObserver:(id)arg1;
- (void)_checkStartMeteringTimer;
- (void)_meteringTimer:(id)arg1;
- (void)_updateMeters:(BOOL)arg1;
- (id)lastSelectedOutputDeviceName;
- (id)lastSelectedInputDeviceName;
- (float)outputGain;
- (void)setOutputGain:(float)arg1;
- (id)outputDevicesInfo;
- (id)outputDevices;
- (id)currentOutputDeviceInfo;
- (id)currentOutputDevice;
- (id)outputChannelMap;
- (id)outputDeviceUID;
- (int)_updateSystemSettingOutput;
- (void)_teardownMonitoring;
- (BOOL)isSystemSettingOutput;
- (BOOL)monitoringEnabled;
- (void)disableMonitoring;
- (void)enableMonitoringWithSystemSetting;
- (void)enableMonitoringWithDeviceUID:(id)arg1 channelMap:(id)arg2;
- (void)setTakeName:(id)arg1;
- (id)defaultTakeName;
- (id)takeName;
- (void)setCustomFilename:(id)arg1;
- (float)defaultInputGain;
- (float)inputGain;
- (void)setInputGain:(float)arg1;
- (struct AudioValueRange)inputGainDecibelRange;
- (BOOL)supportsInputGainControl;
- (id)inputDevicesInfo;
- (id)inputDevices;
- (id)currentInputDeviceInfo;
- (id)currentInputDevice;
- (id)inputChannelMap;
- (int)numberOfInputChannels;
- (id)inputDeviceUID;
- (int)_updateSystemSettingInput;
- (void)_teardownInput;
- (BOOL)isSystemSettingInput;
- (BOOL)inputEnabled;
- (void)disableInput;
- (void)enableInputWithSystemSetting;
- (void)enableInputWithDeviceUID:(id)arg1 channelMap:(id)arg2;
- (BOOL)recordingActive;
- (BOOL)_stopRecording:(BOOL)arg1;
- (void)_restoreContextPostRecording;
- (BOOL)cancelRecording;
- (BOOL)stopRecording;
- (BOOL)startRecording;
- (id)_newFileNameFromSequence:(id)arg1;
- (void)_preparePlayerForRecord:(CDStruct_1b6d18a9)arg1;
- (void)_restorePlayerStatePostRecord;
- (id)_videoModule;
- (id)_timelineModule;
- (id)_timelineRootItem;
- (void)_insureVoiceOverRoleValid;
- (void)mediaEventChanged;
- (id)_mediaEvent;
- (void)resetForNewTimeline;
- (void)_removeUserDefaultsObjectForKey:(id)arg1;
- (void)_setUserDefaultsObject:(id)arg1 forKey:(id)arg2;
- (id)_userDefaultsObjectForKey:(id)arg1;
- (void)_demandCachedUserDefaults;
- (void)_updateDeviceUserDefaultsWithUID:(id)arg1 channelMap:(id)arg2 input:(BOOL)arg3;
- (void)_clearDevice:(BOOL)arg1;
- (int)_setDeviceUID:(id)arg1 channelMap:(id)arg2 input:(BOOL)arg3;
- (int)_setDeviceUID:(id)arg1 maxNumChannels:(unsigned int)arg2 channelMap:(id)arg3 numContextChannels:(unsigned int)arg4 input:(BOOL)arg5;
- (void)_mutePlayer:(BOOL)arg1;
- (void)_updatePlayerMute;
- (BOOL)projectMuted;
- (void)setProjectMute:(BOOL)arg1;
- (void)_addPostRecordingEffectsToObject:(id)arg1;
- (void)_setupVoiceOver;
- (void)setupForConsumerVoiceOver;
- (void)setupForProVoiceOver;
- (void)updateRecordingURL;
- (void)updateOSC;
- (void)resetOSC;
- (void)showOSC:(BOOL)arg1;
- (void)hideInstructionalTextOSC;
- (void)showInstructionalTextOSC;
- (void)setCountdownStyle:(int)arg1;
- (id)_osc;
- (void)_addAnimationClip;
- (id)_setupVoiceOverTakeWithClippedRange:(CDStruct_e83c9415)arg1 role:(id)arg2 library:(id)arg3;
- (BOOL)_finalizeVoiceoverRecording;
- (id)_newClipForEvent:(id)arg1 fromTempURL:(id)arg2;
- (CDStruct_e83c9415)_calculateClippedRange;
- (BOOL)_addClipToAudition:(id)arg1;
- (BOOL)_addClipToTimeline:(id)arg1;
- (BOOL)_createAnimationGapFromLastEnd:(CDStruct_1b6d18a9)arg1;
- (BOOL)_insertGap:(CDStruct_1b6d18a9)arg1 ofDuration:(CDStruct_1b6d18a9)arg2 forAnimation:(BOOL)arg3;
- (void)_updateAnimationClip;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_removeTimelineObserving;
- (void)_addTimelineObserving;
- (void)_appWillUnhideNotification:(id)arg1;
- (void)_appWillHideNotification:(id)arg1;
- (void)_unregisterForAppHiddenNotification;
- (void)_registerForAppHiddenNotification;
- (void)_windowWillMiniaturizeNotification:(id)arg1;
- (void)_unregisterForAppMiniaturizeNotification;
- (void)_registerForAppMiniaturizeNotification;
- (void)_teardownPropertyListeners;
- (void)_setupPropertyListeners;
- (void)_performPropertyChangedForAddress:(struct AudioObjectPropertyAddress)arg1;
- (void)_performPropertyChanged;
- (void)_removePropertyListener:(unsigned int)arg1 forAddress:(const struct AudioObjectPropertyAddress *)arg2;
- (int)_addPropertyListener:(unsigned int)arg1 forAddress:(const struct AudioObjectPropertyAddress *)arg2;
- (BOOL)_isValidPropertyForAudioDevice:(unsigned int)arg1 forAddress:(const struct AudioObjectPropertyAddress *)arg2;
- (void)_removeSystemDefaultListener:(BOOL)arg1;
- (int)_addSystemDefaultListener:(BOOL)arg1;
- (void)_removeDeviceChangeListener;
- (int)_addDeviceChangeListener;
- (void)_removeInputStereoPairListenerForAudioDeviceID:(unsigned int)arg1;
- (int)_addInputStereoPairListenerForAudioDeviceID:(unsigned int)arg1;
- (void)_removeOutputSourceListenerForAudioDeviceID:(unsigned int)arg1;
- (int)_addOutputSourceListenerForAudioDeviceID:(unsigned int)arg1;
- (void)_removeInputVolumeListenerForAudioDeviceID:(unsigned int)arg1;
- (int)_addInputVolumeListenerForAudioDeviceID:(unsigned int)arg1;
- (void)_removeFormatChangeListeners:(id)arg1;
- (int)_addFormatChangeListenerForAudioDeviceID:(unsigned int)arg1 input:(BOOL)arg2;
- (id)systemDefaultUID:(BOOL)arg1;
- (void)tearDownVoiceOver;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

