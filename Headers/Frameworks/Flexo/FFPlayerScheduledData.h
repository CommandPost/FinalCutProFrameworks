//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HGRQCustomJobProtocol.h"
#import "HGRQJobProtocol.h"

@class FFHGAsyncCustomJob, FFHGAsyncFanoutJob, FFMD5AndOffset, FFSVContext, FFScheduleToken, FFStreamVideo, NSArray, NSCondition, NSLock, NSMutableArray, NSOperation, NSSet;

__attribute__((visibility("hidden")))
@interface FFPlayerScheduledData : NSObject <HGRQJobProtocol, HGRQCustomJobProtocol>
{
    FFStreamVideo *_stream;
    CDStruct_1b6d18a9 _time;
    CDStruct_1b6d18a9 _timeRepresented;
    CDStruct_1b6d18a9 _duration;
    CDStruct_1b6d18a9 _nativeFrameDur;
    CDStruct_1b6d18a9 _nativeSampleDur;
    struct CGRect _bounds;
    int _fieldCount;
    CDStruct_e83c9415 _streamTimeRange;
    FFSVContext *_contexts[2];
    NSOperation *_scheduleOp;
    FFScheduleToken *_tokens[2];
    FFScheduleToken *_compositeToken;
    _Bool _alreadyFoundInputsReady;
    CDStruct_1b6d18a9 _schedTimes[2];
    CDStruct_1b6d18a9 _pushedToDestsTime;
    FFMD5AndOffset *_md5AndOffsets[2];
    id _imgCost[2];
    NSArray *_assignedDests;
    NSSet *_assignedDestsSet;
    NSSet *_skippedDests;
    NSMutableArray *_destBackgroundInfos[2];
    int _renderLocation;
    _Bool _inRenderMode;
    _Bool _forPreroll;
    _Bool _sentPMRLogs;
    FFHGAsyncCustomJob *_generateImageJob;
    double _scheduleTokenTime;
    double _generateGraphTime;
    _Bool _boundToRenderer;
    _Bool _notScheduledWhenChosen;
    _Bool _diskNotCompleteWhenChosen;
    double _waitForNewSchedLockTime;
    double _waitForNewImageLockTime;
    NSLock *_streamMutex;
    _Bool _notReadyAtEnqueue;
    _Bool _notReadyAtJobStart;
    _Bool _fromSegmentStore;
    FFHGAsyncFanoutJob *_flatteningImages[2];
    NSArray *_outputsForDests[2];
    _Bool _inval;
    NSCondition *_guard;
    int _state;
    char *_errDetail;
    NSArray *_overlayInfoForDests;
    _Bool _copiedFlattenedImage;
    _Bool _isErrorFrame;
    _Bool _isRateChangeFrame;
}

- (id)initWithStream:(id)arg1 streamMutex:(id)arg2 time:(CDStruct_1b6d18a9)arg3 timeRepresented:(CDStruct_1b6d18a9)arg4 duration:(CDStruct_1b6d18a9)arg5 nativeFrameDur:(CDStruct_1b6d18a9)arg6 nativeSampleDur:(CDStruct_1b6d18a9)arg7 context1:(id)arg8 context2:(id)arg9 bounds:(struct CGRect)arg10 asyncQueue:(id)arg11 inRenderMode:(_Bool)arg12;
- (void)dealloc;
- (id)copyForNewGraph;
- (id)copyForNewOSCsForProposedDests:(id)arg1 withUnneededDests:(id)arg2;
- (id)_getFrameCacheInfo:(int)arg1;
- (_Bool)canUseFlattenedImagesFrom:(id)arg1 proposedDests:(id)arg2 willSkipDests:(id)arg3;
- (void)_getFlattenedImagesFrom:(id)arg1;
- (_Bool)getFlattenedImagesFrom:(id)arg1 proposedDests:(id)arg2 willSkipDests:(id)arg3;
- (void)validateIvarsForState:(int)arg1;
- (void)updateState:(_Bool)arg1 newState:(int)arg2;
- (_Bool)usableFor:(id)arg1 timeRepresented:(CDStruct_1b6d18a9)arg2 nativeFrameDur:(CDStruct_1b6d18a9)arg3 nativeSampleDur:(CDStruct_1b6d18a9)arg4 context1:(id)arg5 context2:(id)arg6;
- (void)_asyncSchedule:(id)arg1;
- (void)schedule;
- (void)_scheduleInternal:(_Bool)arg1;
- (_Bool)schedulingComplete;
- (_Bool)waitUntilScheduled:(id)arg1;
- (id)_sharedLock;
- (_Bool)inputSourcesReady;
- (_Bool)readyToImage;
- (_Bool)pushedToCodec;
- (_Bool)pushToCodecBeforeDate:(id)arg1;
- (_Bool)flattenedImagesReady;
- (_Bool)waitForFlattenedImagesBeforeDate:(id)arg1;
- (id)assignedDests;
- (id)assignedDestsInNSSet;
- (id)skippedDests;
- (void)setAssignedDests:(id)arg1 destsToSkip:(id)arg2;
- (int)frameState;
- (_Bool)isUsable;
- (unsigned int)_schedTokenFlags;
- (_Bool)betterThan:(id)arg1;
- (id)newFlattenImageJob:(id)arg1 field:(int)arg2 renderer:(struct HGRenderer *)arg3 bgInfo:(id)arg4;
- (void)customHGRenderQueueJobCallback:(struct HGRenderer *)arg1;
- (void)jobStarted;
- (void)jobFinished;
- (void)generateImageRepsAndQueueFlattenToExecutateOn:(int)arg1;
- (_Bool)_flattenedImagesCompatibleWithOwnDests:(_Bool)arg1;
- (id)copyPushableImageForDest:(unsigned int)arg1 fieldIndex:(unsigned int)arg2;
- (id)_newPlayerFrameForDestNum:(int)arg1 forRate:(double)arg2;
- (void)generateOverlayInfo:(double)arg1;
- (_Bool)pushFramesToAssignedDests:(double)arg1 retDestsPushed:(id)arg2;
- (void)hintCacheData:(unsigned int)arg1;
- (void)cancel;
- (_Bool)isCancelled;
- (double)executeGraphTime;
- (double)bufferCopyTime;
- (void)sendPMRLogs:(id)arg1 scrubbing:(_Bool)arg2;
- (id)statusInfo;
- (void)setInval:(_Bool)arg1;
- (_Bool)inval;
- (id)description;
@property(nonatomic) _Bool isRateChangeFrame; // @synthesize isRateChangeFrame=_isRateChangeFrame;
@property _Bool isErrorFrame; // @synthesize isErrorFrame=_isErrorFrame;
@property _Bool fromSegmentStore; // @synthesize fromSegmentStore=_fromSegmentStore;
@property(readonly) _Bool notReadyAtJobStart; // @synthesize notReadyAtJobStart=_notReadyAtJobStart;
@property CDStruct_1b6d18a9 pushedToDestsTime; // @synthesize pushedToDestsTime=_pushedToDestsTime;
@property double waitForNewImageLockTime; // @synthesize waitForNewImageLockTime=_waitForNewImageLockTime;
@property double waitForNewSchedLockTime; // @synthesize waitForNewSchedLockTime=_waitForNewSchedLockTime;
@property double generateGraphTime; // @synthesize generateGraphTime=_generateGraphTime;
@property _Bool diskNotCompleteWhenChosen; // @synthesize diskNotCompleteWhenChosen=_diskNotCompleteWhenChosen;
@property _Bool notScheduledWhenChosen; // @synthesize notScheduledWhenChosen=_notScheduledWhenChosen;
@property _Bool boundToRenderer; // @synthesize boundToRenderer=_boundToRenderer;
@property double scheduleTokenTime; // @synthesize scheduleTokenTime=_scheduleTokenTime;
@property _Bool forPreroll; // @synthesize forPreroll=_forPreroll;
@property(readonly) int fieldCount; // @synthesize fieldCount=_fieldCount;
@property(readonly) CDStruct_1b6d18a9 timeRepresented; // @synthesize timeRepresented=_timeRepresented;
@property CDStruct_1b6d18a9 time; // @synthesize time=_time;
@property(readonly) CDStruct_1b6d18a9 nativeSampleDur; // @synthesize nativeSampleDur=_nativeSampleDur;
@property(readonly) CDStruct_1b6d18a9 nativeFrameDur; // @synthesize nativeFrameDur=_nativeFrameDur;
@property(readonly) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly) FFStreamVideo *stream; // @synthesize stream=_stream;

@end

