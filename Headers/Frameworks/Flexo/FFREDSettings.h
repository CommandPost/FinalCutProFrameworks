//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class FFAssetFileIdentifier, NSArray, NSMutableDictionary, NSURL;

__attribute__((visibility("hidden")))
@interface FFREDSettings : NSObject
{
    FFAssetFileIdentifier *_assetFileID;
    NSArray *_clipFileURLArray;
    NSURL *_clipFileURL;
    struct opaqueCMFormatDescription *_fmtDescriptionDefault;
    struct opaqueCMFormatDescription *_fmtDescription;
    NSMutableDictionary *_imgProcSettings;
    CDStruct_bdcb2b0d _savedSettingsMD5;
    CDStruct_bdcb2b0d _dynamicSettingsMD5;
    struct FFSynchronizable *_setsMutex;
    struct atomic<NSThread *> _initializationInProgress;
}

+ (id)copyAndInitializeSettingsInstanceForURL:(id)arg1 assetFileID:(id)arg2 formatDescription:(struct opaqueCMFormatDescription *)arg3;
+ (id)copySettingsInstanceForURL:(id)arg1 assetFileID:(id)arg2;
+ (void)updateREDPixelBufferSettings:(struct __CVBuffer *)arg1 settings:(id)arg2;
+ (id)createREDPixelBufferSettingsFromPixelBuffer:(struct __CVBuffer *)arg1;
+ (id)createREDPixelBufferSettingsFromFormatDescription:(struct opaqueCMFormatDescription *)arg1;
+ (void)setResolvedClipPathInAtomDictionary:(id)arg1 forURL:(id)arg2;
+ (struct opaqueCMSampleBuffer *)createSampleBufferWithUpdatedFormatDescription:(struct opaqueCMSampleBuffer *)arg1 formatDescription:(struct opaqueCMFormatDescription *)arg2;
+ (BOOL)formatDescriptionSettingsAreEqual:(struct opaqueCMFormatDescription *)arg1 formatDescription:(struct opaqueCMFormatDescription *)arg2;
+ (float)gainsMax;
+ (float)gainsMin;
+ (float)exposureMax;
+ (float)exposureMin;
+ (float)brightnessMax;
+ (float)brightnessMin;
+ (float)contrastMax;
+ (float)contrastMin;
+ (float)saturationMax;
+ (float)saturationMin;
+ (float)DRXMax;
+ (float)DRXMin;
+ (float)shadowMax;
+ (float)shadowMin;
+ (float)FLUTMax;
+ (float)FLUTMin;
+ (float)tintMax;
+ (float)tintMin;
+ (float)kelvinMax;
+ (float)kelvinMin;
+ (id)isoSettings;
+ (id)colorSpaceSettings;
+ (id)gammaCurveSettings;
+ (void)readSettingsFromPlugin;
+ (BOOL)isREDRAWCodec:(unsigned int)arg1;
+ (BOOL)isREDRAWFileURL:(id)arg1;
- (id)newURLArrayFromFormatDescriptionExtensions;
- (id)newURLFromFormatDescriptionExtensionsWithKey:(struct __CFString *)arg1;
- (id)newSettingsFromFormatDescriptionExtensionsWithKey:(struct __CFString *)arg1;
- (CDStruct_bdcb2b0d)calcMD5ForSettingsDictionary:(id)arg1;
- (CDStruct_bdcb2b0d)calcMD5ForFormatDescription:(struct opaqueCMFormatDescription *)arg1;
- (void)getImageSettingsColorPrimaries:(const struct __CFString **)arg1 transferFunction:(const struct __CFString **)arg2 matrix:(const struct __CFString **)arg3;
- (void)updateCurrentFormatDescription;
- (void)setSettingsValue:(id)arg1 forKey:(id)arg2;
@property float gainBlue;
@property float gainGreen;
@property float gainRed;
@property float exposure;
@property float brightness;
@property float contrast;
@property float saturation;
@property float DRX;
@property float shadow;
@property float FLUT;
@property float tint;
@property float kelvin;
@property int ISO;
@property int imageGammaCurve;
@property int imageColorSpace;
- (BOOL)sampleBufferFormatDescriptionMatchesCurrent:(struct opaqueCMSampleBuffer *)arg1;
- (id)rmdSidecarFileURL;
- (BOOL)saveImageProcessingSettingsToRmd;
- (id)clipFileURLArray;
- (struct opaqueCMFormatDescription *)newSavedFormatDescriptionSnapshot:(CDStruct_bdcb2b0d *)arg1;
- (struct opaqueCMFormatDescription *)newDynamicFormatDescriptionSnapshot:(CDStruct_bdcb2b0d *)arg1;
- (CDStruct_bdcb2b0d)calcMD5ForDynamicImageProcessingSettings;
- (CDStruct_bdcb2b0d)calcMD5ForSavedImageProcessingSettings;
- (void)revertImageProcessingSettingsToNeutralSettings;
- (void)revertImageProcessingSettingsToDefaultSettings;
- (void)revertImageProcessingSettingsToCameraSettings;
- (struct CGColorSpace *)colorSpaceFromREDImageSettings;
- (BOOL)_isInitialized;
- (void)setFormatDescriptionIfUninitialized:(struct opaqueCMFormatDescription *)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1 assetFileID:(id)arg2;
- (BOOL)_checkWriteLockScope;
- (BOOL)_checkReadLockScope;

@end

