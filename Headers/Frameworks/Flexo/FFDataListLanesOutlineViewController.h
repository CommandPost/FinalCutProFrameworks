//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import <Flexo/FFDataListLanesOutlineViewDelegate-Protocol.h>
#import <Flexo/NSOutlineViewDataSource-Protocol.h>
#import <Flexo/NSOutlineViewDelegate-Protocol.h>

@class FFDataListLanesDataSource, LKScrollView, NSOutlineView, NSString, NSTreeController, NSTreeNode;

__attribute__((visibility("hidden")))
@interface FFDataListLanesOutlineViewController : NSViewController <FFDataListLanesOutlineViewDelegate, NSOutlineViewDelegate, NSOutlineViewDataSource>
{
    BOOL _dragInProgress;
    BOOL _processingExpandCollapse;
    BOOL _updateModelFromSelection;
    BOOL _inSimpleClipMode;
    BOOL _disableExpandCollapseOnReload;
    _Bool _shouldRespondToSelectionChange;
    FFDataListLanesDataSource *_timelineIndexDataSource;
    NSTreeNode *_draggedItem;
    NSOutlineView *_outlineView;
    NSTreeController *_treeController;
    LKScrollView *_scrollView;
}

@property(nonatomic) _Bool shouldRespondToSelectionChange; // @synthesize shouldRespondToSelectionChange=_shouldRespondToSelectionChange;
@property(nonatomic) BOOL disableExpandCollapseOnReload; // @synthesize disableExpandCollapseOnReload=_disableExpandCollapseOnReload;
@property(nonatomic) LKScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) NSTreeController *treeController; // @synthesize treeController=_treeController;
@property(nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property(retain, nonatomic) NSTreeNode *draggedItem; // @synthesize draggedItem=_draggedItem;
@property(nonatomic) BOOL inSimpleClipMode; // @synthesize inSimpleClipMode=_inSimpleClipMode;
@property(retain, nonatomic) FFDataListLanesDataSource *timelineIndexDataSource; // @synthesize timelineIndexDataSource=_timelineIndexDataSource;
- (void)selectionNeedingModelUpdateDidChange:(id)arg1;
- (void)selectionNeedingModelUpdateWillChange:(id)arg1;
- (int)_determineHideActionWithModifierFlags:(unsigned long long)arg1;
- (int)_determineExpandActionWithModifierFlags:(unsigned long long)arg1;
- (int)_determineEnableActionWithModifierFlags:(unsigned long long)arg1 newValue:(BOOL)arg2 lane:(id)arg3;
- (int)_determineArrangeActionWithModifierFlags:(unsigned long long)arg1;
- (int)_determineFocusActionWithModifierFlags:(unsigned long long)arg1 newValue:(BOOL)arg2;
- (void)_expandItemsForSimpleClipMode;
- (void)_restoreTimelineVisibleRectState:(id)arg1;
- (id)_savedTimelineVisibleRectState;
- (id)_timelineModule;
- (void)timelineIndexOutlineViewDidReloadData:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)restoreSelection;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (void)hideButtonClicked:(id)arg1;
- (void)expandCollapseButtonClicked:(id)arg1;
- (void)enableButtonClicked:(id)arg1;
- (void)arrangeButtonClicked:(id)arg1;
- (void)focusButtonClicked:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(id)arg4;
- (id)_draggingImageComponentsForCellViews:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)_dragItem:(id)arg1 proposedItem:(id)arg2 proposedIndex:(long long)arg3 outlineView:(id)arg4 validateOnly:(BOOL)arg5;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)_treeNodeCorrespondingToLane:(id)arg1;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

