//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Flexo/FFEffect.h>

#import "FFEffectSelectionContainment.h"

@class FFMaskBase, NSArray, NSMutableArray, NSString;

__attribute__((visibility("hidden")))
@interface FFMaskedEffectBase : FFEffect <FFEffectSelectionContainment>
{
    NSMutableArray *_masks;
    FFMaskBase *_activeMask;
    BOOL _soloActiveMask;
    BOOL _invertMasks;
    BOOL _showMatte;
}

+ (BOOL)supportsSecureCoding;
+ (id)copyClassDescription;
+ (void)registerEffects;
+ (BOOL)isPassThruEffectWhenColorMasking;
- (id)newImageAtTime:(CDStruct_1b6d18a9)arg1 duration:(CDStruct_1b6d18a9)arg2 withInputStream:(id)arg3 context:(id)arg4 schedInfo:(id)arg5 downstreamPT:(id)arg6 channelOffset:(CDStruct_1b6d18a9)arg7 roi:(const struct CGRect *)arg8 graphBuildInfo:(id)arg9;
- (BOOL)_mask:(id)arg1 wantsToBeMatteScreenedInContext:(id)arg2 averageLuma:(double *)arg3 atTime:(CDStruct_1b6d18a9)arg4;
- (id)simplifiesToPassThruAtTime:(CDStruct_1b6d18a9)arg1 forInputSource:(id)arg2 sampleDur:(CDStruct_1b6d18a9)arg3 context:(id)arg4 channelOffset:(CDStruct_1b6d18a9)arg5;
- (HGRef_265f9e4c)makeMaskNodeAtTime:(CDStruct_1b6d18a9)arg1 withInputImage:(id)arg2 workingSpace:(int)arg3;
-     // Error parsing type: ^{HGNode=^^?{atomic<unsigned int>=AI}ii^vii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f}24@0:8@16, name: newBlendNodeForMask:
- (id)newEffectNodeWithInput:(id)arg1 forKey:(id)arg2 withOffset:(CDStruct_1b6d18a9)arg3 identifier:(id)arg4;
- (id)_newSourceForMaskInput:(id)arg1 offset:(CDStruct_1b6d18a9)arg2 identifier:(id)arg3 videoProps:(id)arg4;
- (id)_newSourceForSubeffectArray:(id)arg1 input:(id)arg2 offset:(CDStruct_1b6d18a9)arg3 identifier:(id)arg4 videoProps:(id)arg5;
- (int)getEffectSchedulingFlags;
- (void)setEffectStack:(id)arg1;
- (void)effectDeactivated;
- (void)effectActivated:(int)arg1;
- (BOOL)supportsReentrancy;
- (id)keyframeableChannels;
- (CDStruct_bdcb2b0d)getContextBasedMD5Adjustment:(id)arg1;
- (BOOL)_atLeastOneMaskEnabled;
- (CDStruct_bdcb2b0d)md5;
- (BOOL)isLoadingInBackground;
- (BOOL)soloEffectMatte;
- (BOOL)isNoOp;
- (BOOL)effectIntroducesAlpha;
- (BOOL)inhibitAutoRenderDueToSettings;
- (id)onScreenControlsForChannelFolder:(id)arg1 effectStack:(id)arg2;
- (void)createChannelsInFolder:(id)arg1;
- (id)inputKeys;
- (id)curveDisplayName;
- (BOOL)isMaskedEffect;
- (void)maskWasRemoved;
- (void)maskWasAdded;
- (void)removeObjectFromMasksAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inMasksAtIndex:(unsigned long long)arg2;
- (void)_insertObject:(id)arg1 inMasksAtIndex:(unsigned long long)arg2 notify:(BOOL)arg3;
@property(readonly, nonatomic) NSArray *masks;
@property BOOL showMatte; // @dynamic showMatte;
@property BOOL invertMasks; // @dynamic invertMasks;
@property(readonly, nonatomic) NSArray *outerEffects;
@property(readonly, nonatomic) NSArray *innerEffects;
- (id)masksFolder;
- (BOOL)shouldDisableKeyframes;
- (id)maskForChannel:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithEffectID:(id)arg1;
@property(nonatomic) BOOL soloActiveMask;
- (BOOL)selectedOrMaskSelected;
- (void)selectActiveMask:(id)arg1;
- (void)deselectAllMasksAndSelf;
- (void)deselectAllMasks;
@property(nonatomic) FFMaskBase *activeMask;
- (BOOL)operationRemoveMaskAtIndex:(unsigned long long)arg1 error:(id *)arg2;
- (BOOL)operationInsertMask:(id)arg1 atIndex:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)operationAddMask:(id)arg1 error:(id *)arg2;
- (void)setSelected:(BOOL)arg1 channel:(id)arg2 effect:(id)arg3;
- (BOOL)shouldSelectChannel:(id)arg1 selectedState:(BOOL)arg2 effect:(id)arg3;
- (id)subEffectForChannel:(id)arg1;
- (BOOL)reorderChannel:(id)arg1 relativeToChannel:(id)arg2 above:(BOOL)arg3;
- (void)removeChannel:(id)arg1;
- (BOOL)hasIsolationMask;
- (id)defaultDisplayNameForMask:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

