//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Flexo/FFHeliumEffect.h>

__attribute__((visibility("hidden")))
@interface FFColorCorrectionEffect : FFHeliumEffect
{
}

+ (id)createChannelDoubleInFolder:(id)arg1 name:(id)arg2 channelID:(unsigned int)arg3 withDefaultValue:(id)arg4;
+ (id)createChannel2DInFolder:(id)arg1 name:(id)arg2 channelID:(unsigned int)arg3 withDefaultValue:(id)arg4;
+ (void)printInfoForFolder:(id)arg1;
+ (void)registerEffects;
- (BOOL)projectUpdaterConvertToNewColorTabEffectsWithError:(BOOL)arg1 error:(id *)arg2;
- (void)updateChannelsWithFolder:(id)arg1;
- (void)_replaceChannelID:(unsigned int)arg1 withCopy:(id)arg2;
- (void)fillSubMenuForKeyframeParamters:(id)arg1 curveEditor:(id)arg2;
- (id)selectedChannels;
- (BOOL)channelSelected:(id)arg1;
- (void)setSelected:(BOOL)arg1 channel:(id)arg2;
- (id)augmentChannelChangeDescriptionForNotification:(id)arg1;
- (void)channelParameterChanged:(id)arg1;
-     // Error parsing type: v112@0:8^{HGNode=^^?{atomic<unsigned int>=AI}ii^vii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f}16{?=qiIq}24@48@56@64@72{CGRect={CGPoint=dd}{CGSize=dd}}80, name: setParameterValuesForNode:atTime:withInputStream:context:pixelTransform:inputData:inputBounds:
-     // Error parsing type: v60@0:8^{HGNode=^^?{atomic<unsigned int>=AI}ii^vii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f}16{?=qiIq}24I48@52, name: setParameterValuesForNode:atTime:withChannelFolderID:context:
-     // Error parsing type: ^{HGNode=^^?{atomic<unsigned int>=AI}ii^vii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f}24@0:8@16, name: newNodeForContext:
- (void)setValue:(id)arg1 forChannelID:(unsigned int)arg2 atTime:(CDStruct_1b6d18a9)arg3;
- (id)valueForChannelID:(unsigned int)arg1 atTime:(CDStruct_1b6d18a9)arg2;
- (BOOL)supportsReentrancy;
- (BOOL)effectIntroducesAlpha;
- (void)createColorCorrectionChannelsInFolder:(id)arg1;
- (BOOL)isNoOp;
- (void)createChannelsInFolder:(id)arg1;
- (id)newChannelFolderWithParent:(id)arg1 name:(id)arg2;
- (id)keyframeableChannels;
- (id)processingFormat:(int)arg1;
- (id)inputKeys;
- (id)channelIDsToKeyframe;
- (void)dealloc;
- (id)initWithEffectID:(id)arg1;
- (void)setAmericanSocietyOfCinematographersColorDecisionListContainer:(struct ASC_CDL_Container *)arg1;
- (struct ASC_CDL_Container *)newAmericanSocietyOfCinematographersColorDecisionListContainerOldFormat:(BOOL)arg1;
- (void)finishedSettingEffectParameters;
- (id)designatedChannelsForXMLExport;
- (BOOL)hasDesignatedChannelsForXMLExport;

@end

