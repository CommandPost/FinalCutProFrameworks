//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSOperation.h"

@class FFBackgroundTaskQueue, NSArray, NSDate, NSString, Stopwatch;

@interface FFBackgroundTask : NSOperation
{
    FFBackgroundTaskQueue *_taskQueue;
    NSString *_displayName;
    id <FFBackgroundTaskTarget><NSObject> _target;
    SEL _taskSelector;
    id _taskObject;
    BOOL _modalOnMainThread;
    BOOL _paused;
    BOOL _performanceMonitoringEnabled;
    BOOL _hasStarted;
    NSArray *_pendingJobNames;
    int _lowOverheadBehavior;
    int _taskType;
    int _actionOptions;
    NSDate *_addedTime;
    NSString *_areaName;
    Stopwatch *_watch;
    Stopwatch *_cancelResponseTimer;
    float _progress;
    NSString *_taskRunGroup;
    BOOL _serializedFlag;
}

+ (double)progressForPendingTasks:(id)arg1 totalTaskCount:(long long)arg2 excludeIndeterminate:(BOOL)arg3;
+ (double)progressForTasks:(id)arg1;
@property(retain) NSArray *pendingJobNames; // @synthesize pendingJobNames=_pendingJobNames;
@property int actionOptions; // @synthesize actionOptions=_actionOptions;
@property int type; // @synthesize type=_taskType;
@property BOOL hasStarted; // @synthesize hasStarted=_hasStarted;
@property BOOL serializedFlag; // @synthesize serializedFlag=_serializedFlag;
@property(retain) NSString *taskRunGroup; // @synthesize taskRunGroup=_taskRunGroup;
@property(readonly) int lowOverheadBehavior; // @synthesize lowOverheadBehavior=_lowOverheadBehavior;
@property(copy) NSString *areaName; // @synthesize areaName=_areaName;
@property(retain) NSDate *addedTime; // @synthesize addedTime=_addedTime;
@property(getter=isModalOnMainThread) BOOL modalOnMainThread; // @synthesize modalOnMainThread=_modalOnMainThread;
@property(retain) id object; // @synthesize object=_taskObject;
@property SEL taskSelector; // @synthesize taskSelector=_taskSelector;
@property(retain) id <FFBackgroundTaskTarget><NSObject> target; // @synthesize target=_target;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) FFBackgroundTaskQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
- (BOOL)usesLibrary:(id)arg1;
- (id)librariesInUse;
- (id)assetsInUse;
- (id)description;
- (BOOL)waitUntilFinishedWithTimeout:(id)arg1;
- (BOOL)shouldIgnoreForAggregateProgress;
- (BOOL)performanceMonitoringEnabled;
- (void)setProgress:(float)arg1;
- (float)progress;
- (BOOL)hasPaused;
- (void)resume;
- (void)pause;
- (void)setPaused:(BOOL)arg1;
@property(readonly, getter=isPaused) BOOL paused;
- (BOOL)supportsPaused;
- (void)cancel;
- (void)main;
- (void)setQueuePriority:(long long)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 priority:(long long)arg4 displayName:(id)arg5 type:(int)arg6 areaName:(id)arg7 lowOverheadBehavior:(int)arg8;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 priority:(long long)arg4 displayName:(id)arg5 type:(int)arg6 areaName:(id)arg7 lowOverheadBehavior:(int)arg8 taskRunGroup:(id)arg9;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 priority:(long long)arg4 displayName:(id)arg5 type:(int)arg6 areaName:(id)arg7 lowOverheadBehavior:(int)arg8 taskSerializationGroup:(id)arg9;

@end

