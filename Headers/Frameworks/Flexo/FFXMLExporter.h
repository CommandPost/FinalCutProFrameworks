//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Flexo/FFXMLBase.h>

@class FFMetadataViewSet, FFProject, NSDictionary, NSMapTable, NSMutableArray, NSSet, NSURL, NSXMLDocument;

__attribute__((visibility("hidden")))
@interface FFXMLExporter : FFXMLBase
{
    NSXMLDocument *_xmlDoc;
    BOOL _isConsumerExport;
    unsigned int _exportVersion;
    BOOL _exportAssetClips;
    BOOL _exportAsLibrary;
    BOOL _exportAsEvents;
    unsigned int _catalogVersion;
    NSMapTable *_resByModelID;
    NSMapTable *_resByLocalID;
    NSMapTable *_projectIDMap;
    NSMapTable *_projectElementMap;
    NSDictionary *_backgroundAssetsDict;
    NSMutableArray *_errors;
    FFProject *_project;
    NSSet *_projectsToExport;
    id *_alternateRoleLabels;
    NSURL *_destURL;
    id *_destString;
    id *_destData;
    NSMapTable *_textStyleMap;
    unsigned int _textStyleCount;
    NSDictionary *_customMetadataRepresentationDict;
    FFMetadataViewSet *_metadataViewSet;
    CDStruct_508ba817 _flags_for_compare;
}

+ (BOOL)isCensoredKeyForPreviousVersion:(id)arg1;
+ (BOOL)isCensoredKey:(id)arg1 forVersion:(unsigned long long)arg2;
@property(readonly) unsigned int exportVersion; // @synthesize exportVersion=_exportVersion;
- (void)dealloc;
- (id)initWithOptions:(id)arg1 taskDelegate:(id)arg2;
- (id)initWithVersion:(unsigned int)arg1 metadataViewSet:(id)arg2 destURL:(id)arg3 destString:(id *)arg4 destData:(id *)arg5 taskDelegate:(id)arg6 excludeModDate:(BOOL)arg7 options:(id)arg8;
- (id)initWithVersion:(unsigned int)arg1 metadataViewSet:(id)arg2 destURL:(id)arg3 taskDelegate:(id)arg4 excludeModDate:(BOOL)arg5;
- (BOOL)exportEventClips:(id)arg1 error:(id *)arg2;
- (BOOL)exportEvents:(id)arg1 selectedEventClipsMap:(id)arg2 library:(id)arg3 libraryFolders:(id)arg4 exportEventFolder:(BOOL)arg5 error:(id *)arg6;
- (BOOL)exportEvents:(id)arg1 selectedEventClipsMap:(id)arg2 exportEventFolder:(BOOL)arg3 error:(id *)arg4;
- (void)collectProjectsToExport:(id)arg1 selectedEventClipsMap:(id)arg2;
- (BOOL)prepareDocument:(id)arg1;
- (id)xmlDocument;
- (id)xmlData;
- (id)xmlString;
- (BOOL)writeDocument:(id *)arg1;
- (BOOL)createDocument:(id)arg1 importOptionsElement:(id)arg2 error:(id *)arg3;
- (id)newResourcesElement;
- (id)newEventProjectNode:(id)arg1 selectedEventClips:(id)arg2 exportEventFolder:(BOOL)arg3;
- (id)newSequenceProjectNodeForPreV1_4:(id)arg1;
- (void)addSequenceProject:(id)arg1 element:(id)arg2 modDate:(id)arg3;
- (void)addSequenceProject:(id)arg1 element:(id)arg2;
- (void)addConsumerUIAudioFeaturesAsEffects:(id)arg1 element:(id)arg2;
- (void)addChildrenForMediaEventFolder:(id)arg1 element:(id)arg2;
- (void)addMediaEventFolderObject:(id)arg1 element:(id)arg2;
- (id)newMediaEventSmartCollectionElement:(id)arg1;
- (id)newSmartCollectionMediaUsageFilterElement:(id)arg1;
- (id)newSmartCollectionRoleUIDFilterElement:(id)arg1 library:(id)arg2;
- (id)newSmartCollectionTimeFilterElement:(id)arg1;
- (id)newSmartCollectionPropertyFilterElement:(id)arg1;
- (id)newSmartCollectionPeopleFilterElement:(id)arg1;
- (id)newShotTypeElement:(id)arg1;
- (id)newSmartCollectionKeywordsFilterElement:(id)arg1;
- (id)newSmartCollectionStabilizationFilterElement:(id)arg1;
- (id)newStabilizationTypeElement:(id)arg1;
- (id)newSmartCollectionClipFilterElement:(id)arg1;
- (id)newSmartCollectionMediaFilterElement:(id)arg1;
- (id)newSmartCollectionRatingsFilterElement:(id)arg1;
- (id)newSmartCollectionTextFilterElement:(id)arg1;
- (void)populateEffectNode:(id)arg1 forEffectBundle:(id)arg2;
- (void)populateEffectNode:(id)arg1 forAudioUnitEffect:(id)arg2;
- (void)addEventStillClip:(id)arg1 element:(id)arg2 modDate:(id)arg3;
- (void)addEventStillClip:(id)arg1 element:(id)arg2;
- (void)addEffects:(id)arg1 element:(id)arg2;
- (void)addEffect:(id)arg1 element:(id)arg2;
- (void)addRetimingInfo:(id)arg1 element:(id)arg2;
- (void)addObjects:(id)arg1 element:(id)arg2;
- (void)addClip:(id)arg1 element:(id)arg2 modDate:(id)arg3;
- (void)addClip:(id)arg1 element:(id)arg2;
- (void)addMultiAngleSources:(id)arg1 element:(id)arg2;
- (void)addMarkers:(id)arg1 element:(id)arg2;
- (void)addIntrinsicChannels:(id)arg1 element:(id)arg2;
- (void)addAudioEnhancements:(id)arg1 element:(id)arg2;
- (void)addAudioIntrinsicChannelsForObject:(id)arg1 element:(id)arg2;
- (void)addVideoIntrinsicChannels:(id)arg1 element:(id)arg2;
- (void)addCropInfo:(id)arg1 element:(id)arg2;
- (void)addAudioComponents:(id)arg1 element:(id)arg2;
- (void)addAudioComponentsForKey:(id)arg1 object:(id)arg2 element:(id)arg3;
- (void)addAudioMute:(id)arg1 element:(id)arg2;
- (void)addAudioPanner:(id)arg1 element:(id)arg2;
- (void)addMatchEQ:(id)arg1 element:(id)arg2;
- (void)addEQ:(id)arg1 element:(id)arg2;
- (void)addHumReduction:(id)arg1 element:(id)arg2;
- (void)addNoiseReduction:(id)arg1 element:(id)arg2;
- (void)addLoudness:(id)arg1 element:(id)arg2;
- (void)addRollingShutterAdjustment:(id)arg1 element:(id)arg2;
- (void)addStabilizationAdjustment:(id)arg1 element:(id)arg2;
- (void)addBlendAdjustment:(id)arg1 element:(id)arg2;
- (void)addOrientationAdjustment:(id)arg1 element:(id)arg2;
- (void)add360TransformAdjustment:(id)arg1 element:(id)arg2;
- (void)addAdjustment:(id)arg1 name:(id)arg2 type:(CDUnknownFunctionPointerType)arg3 element:(id)arg4;
- (void)addColorInfo:(id)arg1 element:(id)arg2;
- (void)addColorASCCDLInfoForCorrectionEffect:(id)arg1 element:(id)arg2;
- (void)addFormat:(id)arg1 element:(id)arg2;
- (void)addNotes:(id)arg1 element:(id)arg2;
- (BOOL)addConsumerExportChannelsForEffect:(id)arg1 toElement:(id)arg2;
- (void)_adjustParameterNode:(id)arg1 sourceParamKey:(id)arg2 forEffect:(id)arg3;
- (void)moveChildrenFromElement:(id)arg1 toElement:(id)arg2 insertionIndex:(unsigned long long)arg3;
- (void)addSingleEffect:(id)arg1 element:(id)arg2;
- (void)addMaskAndEffects:(id)arg1 element:(id)arg2;
- (void)addColorCorrectionEffectAsAdjustment:(id)arg1 element:(id)arg2;
- (void)addEffectChannelsForEffect:(id)arg1 element:(id)arg2;
- (void)addEffectChannels:(id)arg1 rootChannel:(id)arg2 element:(id)arg3 addIfDefault:(BOOL)arg4;
- (BOOL)addEffectChannelsForFolder:(id)arg1 element:(id)arg2 addIfDefault:(BOOL)arg3 usingFilterBlock:(CDUnknownBlockType)arg4;
- (BOOL)addEffectChannelsForFolder:(id)arg1 element:(id)arg2 addIfDefault:(BOOL)arg3 usingFilterBlock:(CDUnknownBlockType)arg4 usingParamKeyBlock:(CDUnknownBlockType)arg5;
- (BOOL)addEffectChannelsForFolder:(id)arg1 element:(id)arg2 addIfDefault:(BOOL)arg3 includeHiddenFolder:(BOOL)arg4 processFolder:(BOOL)arg5 usingFilterBlock:(CDUnknownBlockType)arg6 usingParamKeyBlock:(CDUnknownBlockType)arg7 usingNameBlock:(CDUnknownBlockType)arg8;
- (BOOL)addChannel:(id)arg1 name:(id)arg2 paramKey:(id)arg3 element:(id)arg4;
- (BOOL)addChannel:(id)arg1 name:(id)arg2 paramKey:(id)arg3 attribute:(BOOL)arg4 addIfDefault:(BOOL)arg5 element:(id)arg6;
- (BOOL)addAttributes:(id)arg1 addIfDefault:(BOOL)arg2 element:(id)arg3;
- (BOOL)addParameterNode:(id)arg1 element:(id)arg2;
- (BOOL)addParameterNode:(id)arg1 attribute:(BOOL)arg2 addIfDefault:(BOOL)arg3 element:(id)arg4;
- (id)newParameterNode:(id)arg1;
- (void)addReservedElementForMediaComponent:(id)arg1 element:(id)arg2;
- (id)encodeCustomLogProcessingMode:(long long)arg1 LUTProps:(id)arg2;
- (id)registerMediaElementForMediaComponent:(id)arg1;
- (id)newCaptionNode:(id)arg1;
- (void)addCaptionAttributes:(id)arg1 toElement:(id)arg2;
- (id)newTitleNode:(id)arg1;
- (void)addAttributedString:(id)arg1 toElement:(id)arg2 registerStyleTo:(id)arg3 forEffect:(id)arg4 atField:(unsigned long long)arg5;
- (id)newGapNode:(id)arg1;
- (id)newGeneratorNode:(id)arg1;
- (id)newTranslatedCompositeNode:(id)arg1;
- (id)newTransitionNode:(id)arg1;
- (id)newVideoNode:(id)arg1 media:(id)arg2 src:(id)arg3;
- (id)newAudioNode:(id)arg1 media:(id)arg2 src:(id)arg3;
- (id)newRefNode:(id)arg1 media:(id)arg2;
- (id)newAngleNode:(id)arg1 media:(id)arg2;
- (id)newMulticamNode:(id)arg1;
- (id)copySortedAnglesArray:(id)arg1;
- (id)newClipNode:(id)arg1 media:(id)arg2 src:(id)arg3 kind:(id)arg4 overrideClipItemElements:(id)arg5;
- (id)newClipNode:(id)arg1 media:(id)arg2 src:(id)arg3 kind:(id)arg4;
- (id)newCompositeNode:(id)arg1 isSequence:(BOOL)arg2;
- (id)newAuditionNode:(id)arg1;
- (id)newSpineNode:(id)arg1;
- (void)addRoleGroupAttributeForSimpleClipWithMedia:(id)arg1 element:(id)arg2;
- (void)addAttributesForClipWithMedia:(id)arg1 mediaID:(id)arg2 sourceID:(id)arg3 element:(id)arg4;
- (void)addAttributesForAnchoredObject:(id)arg1 element:(id)arg2;
- (void)addSequenceKeywords:(id)arg1 element:(id)arg2;
- (id)copyChannelStringValue:(id)arg1 withKeyframe:(void *)arg2 isRadians:(BOOL)arg3 isDefault:(char *)arg4;
- (id)registerColorSpace:(struct CGColorSpace *)arg1;
- (id)registerVideoProps:(id)arg1;
- (id)encodeColorSpaceEnumToNCLCTripletWithName:(struct CGColorSpace *)arg1;
- (id)registerMediaElement:(id)arg1;
- (void)addAssetAttributes:(id)arg1 element:(id)arg2;
- (id)registerProjectIDForMediaRef:(id)arg1;
- (BOOL)addBookmarkForURL:(id)arg1 toElement:(id)arg2;
- (void)addMetadataToElement:(id)arg1 forObject:(id)arg2;
- (id)sanitizedMetadataType:(id)arg1;
- (BOOL)addMetadataValue:(id)arg1 forKey:(id)arg2 fromObject:(id)arg3 withDef:(id)arg4 toElement:(id)arg5;
- (BOOL)addCustomMetadataRepresentationForKey:(id)arg1 WithValue:(id)arg2 ToElement:(id)arg3;
- (void)addProjectIDAttributes;
- (void)addTextStyleDefElements;
- (id)registerTextStyle:(id)arg1 forContainerElement:(id)arg2;
- (id)registerEffect:(id)arg1;
- (id)registerProjectRef:(id)arg1;
- (id)registerSequenceProject:(id)arg1;
- (id)registerResource:(id)arg1 name:(id)arg2 modelID:(id)arg3;
- (id)exportOptions;
- (BOOL)exportCancelled;
- (void)log:(id)arg1 warningOnly:(BOOL)arg2;
- (id)newMediaElement:(id)arg1;
- (id)newProjectSequenceElement:(id)arg1;
- (id)newEventClipElement:(id)arg1;

@end

