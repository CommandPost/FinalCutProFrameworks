//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Flexo/FFSourceColorConformBaseClass.h>

#import "FFSourceColorConformProtocol.h"

__attribute__((visibility("hidden")))
@interface FFREDRAWProcessingInfo : FFSourceColorConformBaseClass <FFSourceColorConformProtocol>
{
    struct FFSourceColorConformBaseClass *_cameraLUTConformer;
    int _cameraLUTTargetCS;
    struct CGColorSpace *_outputColorSpace;
    int _outputColorSpaceEnum;
}

-     // Error parsing type: ^{HGColorConform=^^?{atomic<unsigned int>=AI}ii^viIii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f^{HGNode}^{HGNode}^{HGColorConformNodeListCacheItem}BBBiiiii{HGRect=iiii}BBffiiiiiiiiiiii^{HGColorConformLook3DLUT}iiIIffffffffff[8f][4]iii[3f][3f][3f]fBIfB}48@0:8^{HGNode=^^?{atomic<unsigned int>=AI}ii^viIii^fi^{HGShaderEntry}^^{HGNodeInput}i^{HGBitmap}BBBBB{set<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >={__tree<HGNodeInput *, std::__1::less<HGNodeInput *>, std::__1::allocator<HGNodeInput *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNodeInput *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNodeInput *> >=Q}}}i^{HGNode}{HGRect=iiii}{HGRect=iiii}^{HGRenderer}^{HGBitmap}^{HGNode}iii{HGRect=iiii}ii^{HGBitmap}{HGShaderBinding=[1i]iiiiiII}^{HGNodeChain}^{HGShaderEntry}iB{HGBlendingInfo=Qiiiiii}f}16c24i28^^{CGColorSpace}32^i40, name: newColorConformGraph:fromYCbCr:toTargetColorSpace:outputCS:outputCSEnum:
- (int)targetColorSpaceFor:(int)arg1;
- (BOOL)specifiesOrdinaryProcessing;
- (BOOL)isEquivalentTo:(id)arg1 forTargetColorSpace:(int)arg2;
- (BOOL)canConvertToColorSpace:(int)arg1;
- (void)dealloc;
- (id)initWithCameraLUTConformer:(struct FFSourceColorConformBaseClass *)arg1 cameraLUTTargetCS:(int)arg2 outputColorSpace:(struct CGColorSpace *)arg3 outputColorSpaceEnum:(int)arg4;

@end

