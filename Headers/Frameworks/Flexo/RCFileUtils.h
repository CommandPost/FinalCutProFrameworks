//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

__attribute__((visibility("hidden")))
@interface RCFileUtils : NSObject
{
}

+ (id)incrementTrailingCount:(id)arg1 delim:(id)arg2;
+ (unsigned int)getTrailingCount:(id)arg1 delim:(id)arg2 range:(struct _NSRange *)arg3;
+ (id)convertedFile:(id)arg1;
+ (id)displayPathForSystemPath:(id)arg1 resolveSymLinks:(BOOL)arg2;
+ (id)fullFileNameFromFSRef:(struct FSRef *)arg1;
+ (id)urlForFSRef:(struct FSRef *)arg1;
+ (id)pathForFSRef:(struct FSRef *)arg1;
+ (BOOL)getFSRef:(struct FSRef *)arg1 forPath:(id)arg2 isDirectory:(BOOL)arg3;
+ (BOOL)makeFSRef:(id)arg1 ref:(struct FSRef *)arg2;
+ (void)moveFileToTrashWithFileRef:(struct FSRef *)arg1;
+ (void)deleteAllFilesWithExtension:(id)arg1 inDirectory:(id)arg2 byMovingToTrash:(BOOL)arg3;
+ (void)deleteFileAtPath:(id)arg1 byMovingToTrash:(BOOL)arg2;
+ (id)stringByResolvingAliasesInPath:(id)arg1;
+ (id)pathContentOfAliasAtPath:(id)arg1;
+ (BOOL)isAliasFileAtPath:(id)arg1;
+ (struct AliasRecord **)createAlias:(id)arg1;
+ (id)resolveAliasPath:(struct AliasRecord **)arg1;
+ (id)makeUniqueFileWithPrefix:(id)arg1 extension:(id)arg2 inTempDirectoryWithName:(id)arg3;
+ (id)tempDirectoryWithName:(id)arg1;
+ (id)makeUniquePath:(id)arg1 delimiter:(id)arg2;
+ (id)makeUniqueFileAtPath:(id)arg1 prefix:(id)arg2 extension:(id)arg3 withDateString:(id)arg4;
+ (id)makeUniqueFileAtPath:(id)arg1 prefix:(id)arg2 extension:(id)arg3;
+ (unsigned long long)countFiles:(id)arg1 descend:(BOOL)arg2 onlyUserVisible:(BOOL)arg3;
+ (unsigned long long)availableSpaceAtPath:(id)arg1;
+ (unsigned long long)sizeAtPath:(id)arg1 count:(unsigned long long *)arg2;
+ (id)findFirstFileInDirectory:(id)arg1 withExtension:(id)arg2 caseSensitive:(BOOL)arg3;
+ (id)pathToFolderOfType:(unsigned int)arg1 domain:(int)arg2;
+ (BOOL)createDir:(id)arg1;
+ (id)nonLocalizedString:(id)arg1;
+ (BOOL)isDirectory:(id)arg1;
+ (BOOL)doesDirectoryExist:(id)arg1;
+ (id)isMovieFileOpenByOtherApp:(id)arg1;
+ (BOOL)matchCreationDate:(id)arg1 toFile:(id)arg2;
+ (id)pathForAppWithSignature:(unsigned int)arg1;
+ (id)ensurePath:(id)arg1 hasRequiredExtension:(id)arg2;
+ (unsigned int)fileTypeForFileAtPath:(id)arg1;
+ (BOOL)setAttributesForPath:(id)arg1 type:(unsigned int)arg2 creator:(unsigned int)arg3 hideExtension:(BOOL)arg4;
+ (short)setLocked:(BOOL)arg1 forFileRef:(struct FSRef *)arg2;
+ (BOOL)doesFileExist:(id)arg1;
+ (id)tempFolderPath:(id)arg1 appName:(id)arg2 tempFolderName:(id)arg3;
+ (id)compactCalendarDateString;

@end

