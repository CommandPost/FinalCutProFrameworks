//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

__attribute__((visibility("hidden")))
@interface FFDisableAudioScrubbingObserver : NSObject
{
}

+ (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
+     // Error parsing type: v24@0:8^{FFAudioPlayer=@@@@@{CAStreamBasicDescription=dIIIIIIII}I@{CAStreamBasicDescription=dIIIIIIII}{unique_ptr<FFAudioGraph, std::__1::default_delete<FFAudioGraph> >={__compressed_pair<FFAudioGraph *, std::__1::default_delete<FFAudioGraph> >=^{FFAudioGraph}}}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}{map<unsigned int, FFAudioPlayerSourceInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, FFAudioPlayerSourceInfo *> > >={__tree<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true> >=Q}}}{map<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{unique_ptr<FFAudioPlaybackUnit, std::__1::default_delete<FFAudioPlaybackUnit> >={__compressed_pair<FFAudioPlaybackUnit *, std::__1::default_delete<FFAudioPlaybackUnit> >=^{FFAudioPlaybackUnit}}}^{FFAudioPlaybackUnit}i{?=qiIq}ddBBBBB{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}@{?=qiIq}{?=qiIq}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{Synchronizable=^^?{_opaque_pthread_mutex_t=q[56c]}^{_opaque_pthread_t}Q{_opaque_pthread_cond_t=q[40c]}}Bi@B{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<int>=Ai}{FFSemaphore=^^?@}}16, name: unregisterAudioPlayer:
+     // Error parsing type: v24@0:8^{FFAudioPlayer=@@@@@{CAStreamBasicDescription=dIIIIIIII}I@{CAStreamBasicDescription=dIIIIIIII}{unique_ptr<FFAudioGraph, std::__1::default_delete<FFAudioGraph> >={__compressed_pair<FFAudioGraph *, std::__1::default_delete<FFAudioGraph> >=^{FFAudioGraph}}}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}{map<unsigned int, FFAudioPlayerSourceInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, FFAudioPlayerSourceInfo *> > >={__tree<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true> >=Q}}}{map<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{unique_ptr<FFAudioPlaybackUnit, std::__1::default_delete<FFAudioPlaybackUnit> >={__compressed_pair<FFAudioPlaybackUnit *, std::__1::default_delete<FFAudioPlaybackUnit> >=^{FFAudioPlaybackUnit}}}^{FFAudioPlaybackUnit}i{?=qiIq}ddBBBBB{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}@{?=qiIq}{?=qiIq}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{Synchronizable=^^?{_opaque_pthread_mutex_t=q[56c]}^{_opaque_pthread_t}Q{_opaque_pthread_cond_t=q[40c]}}Bi@B{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<int>=Ai}{FFSemaphore=^^?@}}16, name: registerAudioPlayer:
+ (void)setup;

@end

