//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MXFEssenceContainer, MXFTimeline, NSLock, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface MXFFileReader : NSObject
{
    void *_sourceStream;
    void *_primerPack;
    void *_header;
    void *_closedHeader;
    BOOL _headerPartitionIsOpenAndIncomplete;
    long long _leadInSize;
    long long _fileSize;
    long long _headerSize;
    long long calculatedFrameCount;
    BOOL _includesRIP;
    BOOL _isGrowing;
    BOOL _foundLastPartitionBySearch;
    BOOL _includesEssence;
    long long _lastPartitionPosition;
    long long _secondToLastPartitionPosition;
    MXFTimeline *_timeline;
    vector_a3cb12ab *partitionData;
    NSMutableDictionary *descriptiveMetadata;
    BOOL _canStream;
    BOOL _canFastStream;
    NSLock *_buildIndexLock;
    NSMutableDictionary *_bodySIDtoEssenceContainer;
}

@property(retain) NSMutableDictionary *bodySIDtoEssenceContainer; // @synthesize bodySIDtoEssenceContainer=_bodySIDtoEssenceContainer;
@property(readonly) BOOL canFastStream; // @synthesize canFastStream=_canFastStream;
@property(readonly) BOOL canStream; // @synthesize canStream=_canStream;
@property(retain) NSMutableDictionary *descriptiveMetadata; // @synthesize descriptiveMetadata;
@property const vector_a3cb12ab *partitionData; // @synthesize partitionData;
@property(readonly) MXFTimeline *timeline; // @synthesize timeline=_timeline;
@property(readonly) long long secondToLastPartitionPosition; // @synthesize secondToLastPartitionPosition=_secondToLastPartitionPosition;
@property(readonly) long long lastPartitionPosition; // @synthesize lastPartitionPosition=_lastPartitionPosition;
@property(readonly) BOOL includesEssence; // @synthesize includesEssence=_includesEssence;
@property(readonly) BOOL foundLastPartitionBySearch; // @synthesize foundLastPartitionBySearch=_foundLastPartitionBySearch;
@property(readonly) BOOL isGrowing; // @synthesize isGrowing=_isGrowing;
@property(readonly) BOOL includesRIP; // @synthesize includesRIP=_includesRIP;
@property long long calculatedFrameCount; // @synthesize calculatedFrameCount;
@property(readonly) long long headerSize; // @synthesize headerSize=_headerSize;
@property(readonly) long long fileSize; // @synthesize fileSize=_fileSize;
@property(readonly) long long leadInSize; // @synthesize leadInSize=_leadInSize;
@property(readonly) BOOL headerPartitionIsOpenAndIncomplete; // @synthesize headerPartitionIsOpenAndIncomplete=_headerPartitionIsOpenAndIncomplete;
@property(readonly) struct MXPartitionHeader *closedHeader; // @synthesize closedHeader=_closedHeader;
@property(readonly) struct MXPartitionHeader *header; // @synthesize header=_header;
@property(readonly) struct GZIOBase *sourceStream; // @synthesize sourceStream=_sourceStream;
- (long long)partitionHeaderSizeWithOffset:(long long)arg1 createData:(id *)arg2;
- (long long)readPartitionHeaderWithOffset:(long long)arg1 header:(struct MXPartitionHeader **)arg2;
- (void)buildBaseIndex;
- (void)analyseEssence;
- (void)setGlobalMetadataWithHeader:(const struct MXPartitionHeader *)arg1;
- (struct MXPartitionHeader *)searchLastPartitionWithSize:(unsigned long long *)arg1;
- (void)decodeAllPartitions;
- (void)decodePartitionDataWithEntry:(CDStruct_689138c8 *)arg1 partitionHeader:(const struct MXPartitionHeader *)arg2 headerSize:(unsigned long long)arg3 nextPartitionPosition:(long long)arg4;
- (void)checkAndLoadFirstIndexTables;
- (void)decodePartitionWithEntry:(CDStruct_689138c8 *)arg1 nextPartitionPosition:(long long)arg2;
- (void)checkAndLoadLastPartitionsForIndexAndEssence;
- (void)wrappingFromTimeline;
- (void)setColorSpaceFromP2XML:(id)arg1;
- (void)decodeCompleteFileWithoutRIP;
- (void)decodeRequiredPartitionsWithIsOPAtom:(BOOL)arg1;
- (void)checkIndexData;
- (void)decodeFooterWithIsOPAtom:(BOOL)arg1;
- (void)decodeRIP;
- (void)checkFastStream;
- (unsigned int)addIncludedIndexTablesFromHeader:(struct MXPartitionHeader *)arg1 analyseForward:(BOOL)arg2;
- (void)addEssenceContainersWithHeader:(const struct MXPartitionHeader *)arg1;
- (long long)decodeLeadInSize;
@property(readonly) BOOL indexComplete;
@property(readonly) BOOL isFileValid;
@property(readonly) BOOL hasMultipleEssenceContainers;
@property(readonly) MXFEssenceContainer *mainEssenceContainer;
@property struct MXPrimerPack *primerPack;
- (CDStruct_689138c8 *)partitionEntryWithEssenceOffset:(long long)arg1 bodySID:(unsigned int)arg2;
- (void)buildIndexWithMediaEditPosition:(long long)arg1 media:(id)arg2;
- (BOOL)runDecoderWithFullDecode:(BOOL)arg1 error:(id *)arg2;
- (BOOL)runTestDecoderWithError:(id *)arg1;
- (void)cleanAll;
- (void)dealloc;
- (id)initWithStream:(struct GZIOBase *)arg1;

@end

