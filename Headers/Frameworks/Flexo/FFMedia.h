//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Flexo/FFBinObject.h>

#import "FFAssetContainerProtocol.h"
#import "FFDataModelProtocol.h"
#import "FFMD5Protocol.h"
#import "FFMediaDisplayProtocol.h"
#import "FFMetadataProtocol.h"
#import "FFSkimmableProtocol.h"
#import "NSCoding.h"
#import "NSCopying.h"

@interface FFMedia : FFBinObject <NSCoding, NSCopying, FFMediaDisplayProtocol, FFDataModelProtocol, FFSkimmableProtocol, FFAssetContainerProtocol, FFMD5Protocol, FFMetadataProtocol>
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)isRemoteURL:(id)arg1;
+ (id)copyClassDescription;
+ (BOOL)canRebuildAudioPropertiesForMedia:(id)arg1;
+ (id)newAudioSourcePropertiesMapForProvider:(id)arg1;
+ (void)sortSequences:(id)arg1 usingOptions:(unsigned long long)arg2;
+ (void)sortMedia:(id)arg1 usingOptions:(unsigned long long)arg2;
- (id)metadataNameForAudioChannel:(unsigned long long)arg1 withSourceKey:(id)arg2;
- (void)setLastMarkerNumber:(unsigned long long)arg1;
- (unsigned long long)lastMarkerNumber;
- (void)setIsGood:(BOOL)arg1;
- (BOOL)isGood;
- (void)setDescriptionText:(id)arg1;
- (id)descriptionText;
- (void)setTimecodeFrameDuration:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)timecodeFrameDuration;
- (void)setTimecodeDisplayDropFrame:(long long)arg1;
- (long long)timecodeDisplayDropFrame;
- (void)setMediaRange:(CDStruct_e83c9415)arg1;
- (CDStruct_e83c9415)mediaRange;
- (void)setHasVideo:(BOOL)arg1;
- (BOOL)hasVideo;
- (void)setHasAudio:(BOOL)arg1;
- (BOOL)hasAudio;
- (unsigned long long)audioSourceCount;
- (id)audioSourcePropertiesMap;
- (CDStruct_1b6d18a9)audioSampleDuration;
- (void)setAudioSampleRate:(double)arg1;
- (double)audioSampleRate;
- (void)setAudioChannelCount:(unsigned int)arg1;
- (unsigned int)audioChannelCount;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (id)media;
- (CDStruct_e83c9415)untimedAudioClippedRange;
- (CDStruct_e83c9415)untimedClippedRange;
- (CDStruct_bdcb2b0d)audioMD5:(int)arg1;
- (CDStruct_1b6d18a9)editingFrameDuration;
- (BOOL)roundInTimeRange:(CDStruct_e83c9415 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)roundOutTimeRange:(CDStruct_e83c9415 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)ceilingTime:(CDStruct_1b6d18a9 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)floorTowardsZeroTime:(CDStruct_1b6d18a9 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)floorTime:(CDStruct_1b6d18a9 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)floorTimeToSampleBoundary:(CDStruct_1b6d18a9 *)arg1 temporalResolutionMode:(int)arg2 error:(id *)arg3;
- (BOOL)ceilingToMediaTime:(CDStruct_1b6d18a9 *)arg1 media:(id)arg2 temporalResolutionMode:(int)arg3 error:(id *)arg4;
- (BOOL)floorToMediaTime:(CDStruct_1b6d18a9 *)arg1 media:(id)arg2 temporalResolutionMode:(int)arg3 error:(id *)arg4;
- (BOOL)floorToMediaTimeToSampleBoundary:(CDStruct_1b6d18a9 *)arg1 media:(id)arg2 temporalResolutionMode:(int)arg3 error:(id *)arg4;
- (BOOL)timeOnSampleBoundary:(CDStruct_1b6d18a9)arg1 temporalResolutionMode:(int)arg2;
- (CDStruct_1b6d18a9)sampleDurationForTemporalResolutionMode:(int)arg1;
- (int)_resolveTemporalResolution:(int)arg1;
- (id)skimmableRolesWithPlayEnable:(int)arg1;
- (id)skimmableAudioLevelEffects;
- (void)addThumbMD5Info:(id)arg1 imageQuality:(int)arg2;
- (id)thumbMD5InfoForTime:(CDStruct_1b6d18a9)arg1 imageQuality:(int)arg2;
- (CDStruct_1b6d18a9)containerToLocalTime:(CDStruct_1b6d18a9)arg1 container:(id)arg2;
- (CDStruct_1b6d18a9)localToContainerTime:(CDStruct_1b6d18a9)arg1 container:(id)arg2;
- (CDStruct_1b6d18a9)sampleDuration;
- (CDStruct_1b6d18a9)frameDuration;
- (id)descriptionWithIndent:(long long)arg1;
- (long long)compareMediaForDisplayName:(id)arg1;
- (id)metadataAudioFormat;
- (id)metadataAudioChannelConfig;
- (id)metadataAudioChannelCount;
- (id)metadataVideoFrameRate;
- (id)metadataVideoSampleRate;
- (id)metadataVideoFieldDominance;
- (id)metadataVideoFrameSize;
- (struct CGSize)pixelFrameSize;
- (id)metadataMediaDuration;
- (id)metadataMediaEnd;
- (id)metadataMediaStart;
- (id)timecodeFromTime:(CDStruct_1b6d18a9)arg1 offset:(BOOL)arg2;
- (CDStruct_1b6d18a9)timeFromTimecode:(id)arg1 offset:(BOOL)arg2;
- (BOOL)validateMetadataItem:(id)arg1;
- (id)rootChannel;
- (id)mdValueForKey:(id)arg1;
- (id)fileURLs:(int)arg1;
- (id)clipRefsIncludingAnchored:(BOOL)arg1 activeOnly:(BOOL)arg2 insideClipRefs:(BOOL)arg3 acrossEvents:(BOOL)arg4;
- (id)mediaRefs;
- (void)_clipRefs:(id)arg1 includeAnchored:(BOOL)arg2 activeOnly:(BOOL)arg3 insideClipRefs:(BOOL)arg4 acrossEvents:(BOOL)arg5;
- (void)addClipRefsToSet:(id)arg1;
- (id)clipRefs;
- (void)addAssetRefsToSet:(id)arg1;
- (id)assetRefs;
- (id)assetsIncludingAnchored:(BOOL)arg1 activeOnly:(BOOL)arg2;
- (void)addAssetsToSet:(id)arg1;
- (id)assets;
- (id)modelLockingObject;
- (id)originalMediaURL;
- (id)mediaIndexingKey;
- (id)mediaIdentifier;
- (CDStruct_1b6d18a9)videoFrameDuration;
- (CDStruct_1b6d18a9)videoSampleDuration;
- (id)description;
- (BOOL)isUpgradeProxyAsset;
- (BOOL)isProject;
- (BOOL)isPSDLayer;
- (BOOL)isPSD;
- (BOOL)isStill;
- (BOOL)mediaAvailable;
- (void)invalidateStreamRange:(CDStruct_e83c9415)arg1;
- (void)invalidateSampleRange:(CDStruct_e83c9415)arg1 withRangeKey:(id)arg2;
- (void)invalidateSampleRange:(CDStruct_e83c9415)arg1;
- (void)invalidateSourceRange:(CDStruct_e83c9415)arg1;
- (void)rangeInvalidated:(id)arg1;
- (int)rotationDegrees;
- (void)setMarkerDisplayNameIfNeeded:(id)arg1;
- (id)defaultMarkerDisplayName;
- (unsigned long long)nextMarkerNumber;
- (struct CGSize)frameSize;
- (CDStruct_1b6d18a9)timeOffset;
- (CDStruct_e83c9415)mediaRangeForType:(int)arg1;
- (CDStruct_e83c9415)mediaRangeConstrainedByInOutForType:(int)arg1;
- (CDStruct_e83c9415)unclippedRange;
- (CDStruct_e83c9415)combinedAudioVideoClippedRange;
- (CDStruct_e83c9415)audioClippedRange;
- (CDStruct_e83c9415)clippedRange;
- (unsigned int)timecodeCounterValue;
- (struct opaqueCMFormatDescription *)createTimecodeFormatDescription;
- (id)videoProps;
- (id)skimmableDefaultProviderOptions;
- (id)newSkimmableProviderWithOptions:(id)arg1;
- (id)newProvider;

@end

