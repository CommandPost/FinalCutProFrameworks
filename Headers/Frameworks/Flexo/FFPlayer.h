//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FFPhaseCounterChanged.h"
#import "FFPlayerLockInteractions.h"

@class FFContext, FFPMRLogFunnel, FFPendingHGCJSync, FFPlaybackContext, FFPlayerDropTracker, FFPlayerHeliumUsageRequest, FFPlayerSchedTokenQueue, FFPlayerScheduledData, FFProvider, FFSVContext, FFSchedQueueingInfo, FFSourceVideo, FFStreamVideo, FFStreamVideoCache, FFStreamVideoOptions, FFVideoProps, NSMutableArray, NSMutableSet, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSThread;

@interface FFPlayer : NSObject <FFPhaseCounterChanged, FFPlayerLockInteractions>
{
    FFContext *_ffContext;
    FFPlaybackContext *_context;
    FFProvider *_sourceVideoProvider;
    FFSourceVideo *_sourceVideo;
    int _libraryWorkingSpace;
    FFVideoProps *_fallbackVideoProps;
    FFStreamVideoCache *_streamVideoCache;
    FFStreamVideo *_streamVideo;
    FFStreamVideo *_emptyStream;
    NSMutableArray *_destVideos;
    CDStruct_1b6d18a9 _minDestFDLimit;
    NSMutableSet *_outOfDateDests;
    FFPlayerSchedTokenQueue *_schedTokQueue;
    NSObject<OS_dispatch_queue> *_queueUrgentScheduleQueue;
    FFPMRLogFunnel *_detailPMRFunnel;
    FFPMRLogFunnel *_summaryPMRFunnel;
    int _loopMode;
    CDStruct_e83c9415 _loopRange;
    CDStruct_e83c9415 _loopRangeWithoutPrePostRoll;
    CDStruct_1b6d18a9 _returnToTime;
    NSObject<OS_dispatch_queue> *_updateTimeQueue;
    NSObject<OS_dispatch_source> *_updateTimeDispatchSource;
    NSObject<OS_dispatch_queue> *_asyncDeallocQueue;
    int _asyncDeallocsPending;
    int _asyncDeallocsHWM;
    struct OpaqueCMTimebase *_timebase;
    struct OpaqueCMTimebase *_alwaysForwardTimebase;
    long long _lastPBStartFrameNum;
    CDStruct_1b6d18a9 _duration;
    unsigned int _timecodeType;
    struct PCProcrastinatedDispatch_t _destUpdateProcrastinatedDisp;
    NSObject<OS_dispatch_queue> *_destUpdateQueue;
    BOOL _inited;
    long long _currentScheduleFrameIndex;
    NSMutableArray *_scheduledFrames;
    FFPlayerScheduledData *_currentScrubFrame;
    NSMutableArray *_recentlyPushed;
    NSMutableArray *_lastFramesMD5Only;
    double _rate;
    NSMutableArray *_savedFramesForRateChange;
    _Bool _stopping;
    _Bool _waitForThreadToAck;
    FFStreamVideoOptions *_currentVideoOptions;
    struct __CFDictionary *_ptsForCurrentStream[2];
    FFSVContext *_scrubContexts[3];
    FFSVContext *_playContexts[3];
    CDStruct_1b6d18a9 _timeForContext;
    double _rateForContext;
    CDStruct_1b6d18a9 _sampleDuration;
    CDStruct_1b6d18a9 _frameDuration;
    CDStruct_1b6d18a9 _smallestSampleDuration;
    int _fieldDominance;
    struct CGRect _sequenceBounds;
    int _sequenceCameraMode;
    int _userVisibleQuality;
    int _temporalQual;
    BOOL _highSpeedPlayReducesTQual;
    BOOL _draftTextMode;
    unsigned int _streamAudioFlags;
    struct CGColorSpace *_colorSpace;
    int _mode;
    BOOL _destsStarted;
    _Bool _enteredLOHMode;
    // Error parsing type: ^{FFAudioPlayer=@@@@@{CAStreamBasicDescription=dIIIIIIII}I@{CAStreamBasicDescription=dIIIIIIII}{unique_ptr<FFAudioGraph, std::__1::default_delete<FFAudioGraph> >={__compressed_pair<FFAudioGraph *, std::__1::default_delete<FFAudioGraph> >=^{FFAudioGraph}}}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}^{FFAudioNode}{map<unsigned int, FFAudioPlayerSourceInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, FFAudioPlayerSourceInfo *> > >={__tree<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, FFAudioPlayerSourceInfo *>, std::__1::less<unsigned int>, true> >=Q}}}{map<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, FFAudioPlayerMeteringHook *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{unique_ptr<FFAudioPlaybackUnit, std::__1::default_delete<FFAudioPlaybackUnit> >={__compressed_pair<FFAudioPlaybackUnit *, std::__1::default_delete<FFAudioPlaybackUnit> >=^{FFAudioPlaybackUnit}}}^{FFAudioPlaybackUnit}i{?=qiIq}ddBBBBB{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}@{?=qiIq}{?=qiIq}{unique_ptr<FFAudioBufferList, std::__1::default_delete<FFAudioBufferList> >={__compressed_pair<FFAudioBufferList *, std::__1::default_delete<FFAudioBufferList> >=^{FFAudioBufferList}}}{Synchronizable=^^?{_opaque_pthread_mutex_t=q[56c]}^{_opaque_pthread_t}Q{_opaque_pthread_cond_t=q[40c]}}Bi@B{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<int>=Ai}{FFSemaphore=^^?@}}, name: _audioPlayer
    int _hmdSharingConfig;
    FFSchedQueueingInfo *_playerQueueInfo;
    // Error parsing type: AB, name: _recalcRenderLoc
    _Bool _oscsOutOfDate;
    _Bool _deferOSCRegeneration;
    BOOL _playsSelected;
    BOOL _showMagicFrame;
    CDStruct_1b6d18a9 _lastSpotlightHoldoff;
    int _scrubSizeMode;
    int _scrubFxMode;
    BOOL _fxQualityShortCutCurrentlyActive;
    BOOL _sizeShortCutCurrentlyActive;
    CDStruct_1b6d18a9 _earliestSnapBackRedrawTime;
    NSObject *_lastLiveEditInvalCause;
    CDStruct_1b6d18a9 _DEBUG_lastPBStartTime;
    // Error parsing type: Ai, name: _throttlePlayheadAmount
    // Error parsing type: Ai, name: _throttlePlayheadCounter
    int _frameSentSincePreroll;
    _Bool _waitingForInitialFill;
    CDStruct_1b6d18a9 _renderVideoLastReturned;
    CDStruct_1b6d18a9 _renderVideoLastInterval;
    struct FFPlayerHealthMeter *_healthMeter;
    CDStruct_b80813c2 _lastPlayingHealthLevels;
    int _scrubbedFramesSinceStopping;
    BOOL _useLoopingPreroll;
    BOOL _useLoopingPostroll;
    BOOL _loopingInhibitedUntilStop;
    BOOL _audioOnlyLooping;
    BOOL _dontRedrawOnInvals;
    BOOL _stopOnDroppedFrame;
    NSMutableArray *_specialLiveEditFrames;
    int _framesSkippedLastLiveEdit;
    BOOL _unprocessedStopDueToDrop;
    BOOL _changingRate;
    FFPlayerHeliumUsageRequest *_heliumUsageMode;
    _Bool _waitForLoadingFX;
    FFPlayerDropTracker *_dropTracker;
    FFPendingHGCJSync *_customJobsShutdownSyncer;
    struct TimeRateChangeController *_timeRateChangeController;
    BOOL _playPastLoopEnd;
    CDStruct_1b6d18a9 _playbackPreroll;
    // Error parsing type: ^{FFPlayerLockable={timed_mutex={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}B}{atomic<NSThread *>=A@}@}, name: _playerLock
    NSString *_shutdownBlockerString;
    // Error parsing type: {atomic<unsigned int>="__a_"AI}, name: _framesSinceFlush
    struct FFPlayerHeliumRenderLocInfo _renderLocation;
    _Bool _sufferedDataModelLockHoldoff;
    int _channelChangeBeginCount;
    int _channelChangeBeginOldScrubSize;
    struct {
        _Bool _active;
        unsigned int _ID;
    } _uiPlaybackPowerMgrAssertion;
    struct FFPlaybackCounters _playbackCounters;
    struct FFSynchronizable *_flushPushLock;
    struct FFSynchronizable *_cachedPropsLock;
    NSThread *_playerThread;
    // Error parsing type: ^{FFPlayerThreadStateManager={FFSynchronizable={_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}^{_opaque_pthread_t}I^?^v}{atomic<FFPlayerThreadStateValue>=Ai}@}, name: _threadState
    NSMutableSet *_blockingDests;
    NSMutableSet *_starvingDests;
    _Bool sufferedDataModelLockHoldoff;
}

+ (id)_newEmptySrcForProps:(id)arg1;
+ (void)notifyAppWillTerminate;
+ (void)waitForPendingShutdownsToComplete;
+ (void)_internalwaitForPendingShutdownsToComplete;
+ (void)teardown;
+ (BOOL)suspendBackgroundOperationsDuringPlayback;
+ (id)newReducedRateTrackerForMultiAngle;
+ (id)newHighQualityContextForSource:(id)arg1 field:(unsigned int)arg2 workingSpace:(int)arg3;
+ (id)newHighQualityContextForSource:(id)arg1 field:(unsigned int)arg2;
+ (id)newContextForStream:(id)arg1 colorSpace:(struct CGColorSpace *)arg2 field:(unsigned int)arg3 quality:(int)arg4 temporalQuality:(int)arg5 priority:(int)arg6 options:(id)arg7 workingSpace:(int)arg8;
+ (id)newContextForPT:(id)arg1 colorSpace:(struct CGColorSpace *)arg2 field:(unsigned int)arg3 quality:(int)arg4 temporalQuality:(int)arg5 priority:(int)arg6 options:(id)arg7 locationHint:(struct FFImageLocationHint)arg8 workingSpace:(int)arg9;
+ (_Bool)UIPlaybackIsActive;
+ (void)uiPlayStateChanged;
+ (void)initialize;
+ (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
+ (id)newHeliumUsageRequestForUserDefault:(id)arg1 playerMode:(int)arg2 debugInfo:(id)arg3;
@property(nonatomic) _Bool sufferedDataModelLockHoldoff; // @synthesize sufferedDataModelLockHoldoff;
@property(nonatomic) CDStruct_1b6d18a9 playbackPreroll; // @synthesize playbackPreroll=_playbackPreroll;
@property(nonatomic) BOOL playPastLoopEnd; // @synthesize playPastLoopEnd=_playPastLoopEnd;
@property(readonly, nonatomic) FFPMRLogFunnel *jklFunnel; // @synthesize jklFunnel=_summaryPMRFunnel;
@property(readonly, nonatomic) FFPlaybackContext *playbackContext; // @synthesize playbackContext=_context;
@property(readonly, nonatomic) BOOL changingRate; // @synthesize changingRate=_changingRate;
@property BOOL stopOnDroppedFrame; // @synthesize stopOnDroppedFrame=_stopOnDroppedFrame;
@property BOOL dontRedrawOnInvals; // @synthesize dontRedrawOnInvals=_dontRedrawOnInvals;
@property _Bool waitForThreadToAck; // @synthesize waitForThreadToAck=_waitForThreadToAck;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)measureDataModelLockHoldoff;
- (void)setDropTrackerWarningLimit:(int)arg1;
- (int)dropTrackerWarningLimit;
- (void)_idleThreadIfSatisfied:(int)arg1;
- (void)_waitForQueueFill;
- (void)_waitForAttention;
- (void)_wakeThread:(const char *)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)processDestChanges:(int)arg1;
- (int)examineDestsForChangedRequests;
- (void)setShowMagicFrame:(BOOL)arg1;
- (BOOL)showMagicFrame;
- (id)context;
- (struct OpaqueCMTimebase *)alwaysForwardTimebase;
- (struct OpaqueCMTimebase *)timebase;
- (void)notifyAudioPlaybackStateChanged;
- (BOOL)isAudioPlaybackOn;
- (void)endSkimming;
- (void)beginSkimming;
- (void)endStepPlayback;
- (void)beginStepPlayback:(CDStruct_1b6d18a9)arg1;
-     // Error parsing type: ^{FFPlayerLockable={timed_mutex={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}B}{atomic<NSThread *>=A@}@}16@0:8, name: _internalPlayerLock
- (id)_sharedLock;
- (void)_setupFromSourceVideo;
- (struct __CFDictionary *)copyPixelTransforms:(id)arg1 forField:(int)arg2;
- (void)setAbortPreroll:(BOOL)arg1;
- (void)streamAudioFlagsChangedForContext:(id)arg1;
- (void)avRolesChangedForContext:(id)arg1;
- (void)videoShowObjectsOptionsChangedForContext:(id)arg1;
- (void)videoShowObjectsChangedForContext:(id)arg1;
- (void)videoTemporalQualityChangedForContext:(id)arg1;
- (void)videoQualityChangedForContext:(id)arg1;
- (void)timeRateChangedForContext:(id)arg1;
- (void)_updateFFContextTime:(CDStruct_1b6d18a9)arg1 rate:(double)arg2 mustUpdate:(_Bool)arg3;
- (void)_updateTimeViaTimer:(id)arg1;
- (id)copyCurrentScrubContext;
- (struct CGRect)sequenceBounds;
- (int)mode;
- (void)setDraftTextMode:(BOOL)arg1;
- (void)_setDoFirstFrameOfDrawTwice:(id)arg1;
- (void)_setSizeShortCutCurrentlyActive:(BOOL)arg1;
- (BOOL)fxQualityShortCutCurrentlyActive;
- (void)_setfxQualityShortCutCurrentlyActive:(BOOL)arg1;
- (int)scrubSizeMode;
- (void)setScrubSizeMode:(int)arg1;
- (void)setHighSpeedPlayReducesTQual:(BOOL)arg1;
- (void)setTemporalQuality:(int)arg1;
- (void)setQuality:(int)arg1;
- (void)_getContextsForRate:(double)arg1 f1Context:(id *)arg2 f2Context:(id *)arg3 allAnglesContext:(id *)arg4;
- (id)ptForQuality:(int)arg1 field:(int)arg2;
- (_Bool)waitForLoadingFX;
- (void)setWaitForLoadingFX:(_Bool)arg1;
- (_Bool)setHeliumResourceChoiceMode:(id)arg1 debugInfo:(id)arg2;
- (void)_setRenderLocationNeedsUpdate;
- (_Bool)_updateRenderLocIfNeeded;
- (void)_invalidateScrubContext:(BOOL)arg1 invalidatePlayContext:(BOOL)arg2;
- (BOOL)draftTextMode;
- (BOOL)highSpeedPlayReducesTQual;
- (int)temporalQuality;
- (int)_adjustedQuality:(BOOL)arg1;
- (int)quality;
- (int)_fieldDominance;
- (void)clearStatus;
- (void)setStatus:(id)arg1;
- (CDStruct_1b6d18a9)stepDuration;
- (CDStruct_1b6d18a9)sampleDuration;
- (void)updateFieldModeAndDurationsFromProps:(id)arg1;
- (CDStruct_1b6d18a9)frameDuration;
- (void)regenerateOSCs;
- (void)processDeferredOSCs;
- (void)setDeferOSCGeneration:(_Bool)arg1;
- (void)setPlayerTimeToPlayerSampleBoundary;
- (CDStruct_1b6d18a9)playerTimeAtPlayerSampleBoundary;
- (void)getHMDWarningIndicatorsState:(_Bool *)arg1 sticky:(_Bool *)arg2;
- (void)updateHMDDropOrReprojCount:(unsigned long long)arg1 dropRateLastSecond:(float)arg2;
- (void)updateHMDHealthWithEquirectProjectionCost:(CDStruct_1b6d18a9)arg1;
- (const struct FxDeviceSet *)requestedExecutionLocation;
@property unsigned int timecodeType; // @synthesize timecodeType=_timecodeType;
- (unsigned int)currentTimecodeType;
- (double)playerRate;
- (double)rate;
- (void)setTime:(CDStruct_1b6d18a9)arg1 rate:(double)arg2 duration:(CDStruct_1b6d18a9)arg3;
- (void)setTime:(CDStruct_1b6d18a9)arg1 rate:(double)arg2 duration:(CDStruct_1b6d18a9)arg3 forceRedraw:(BOOL)arg4;
- (void)setTime:(CDStruct_1b6d18a9)arg1 rate:(double)arg2;
- (void)_setTime:(CDStruct_1b6d18a9)arg1 rate:(double)arg2 duration:(CDStruct_1b6d18a9)arg3 forceRedraw:(BOOL)arg4;
- (int)_stashFramesForRateChange:(CDStruct_1b6d18a9)arg1 frameDuration:(CDStruct_1b6d18a9)arg2 oldrate:(double)arg3 rate:(double)arg4;
- (void)_stop;
- (void)restartPlayback;
- (void)stop;
- (int)start:(double)arg1 maxDestLatency:(unsigned int)arg2;
- (void)_startVideo:(id)arg1;
- (void)setAudioSkimmingEnable:(int)arg1;
- (void)setAuxiliaryPlaybackUnit:(struct FFAudioPlaybackUnit *)arg1;
- (void)muteAudioPlayback:(BOOL)arg1;
- (unsigned int)numAudioOutputChannels;
- (unsigned int)meterAudioLevelsForRole:(id)arg1 channels:(unsigned int)arg2 peakValues:(float *)arg3 loudnessValues:(CDStruct_818bb265 *)arg4;
- (void)destAudioRenderCallback;
- (void)videoDestCallback:(BOOL)arg1 forVideoDest:(id)arg2;
- (void)_rebuildDestLists;
- (unsigned int)_maxVideoDestOutputLatencyInFrames;
- (BOOL)_videoDestsWantFrame;
- (void)_waitForNextNInputs:(unsigned long long)arg1 beforeDate:(id)arg2;
- (void)idle;
- (int)_renderVideo;
- (_Bool)_checkForPause:(id)arg1;
- (void)_updateZebraTimer;
- (void)counterPhaseChangedWithSender:(id)arg1;
- (void)maybeInstallSnapBack;
- (void)maybeSnapBack;
- (_Bool)lastFrameWantsSnapBackRedraw;
- (BOOL)videoDestsWantFrame;
- (void)_ensureScheduledFramesHaveUsableDests;
- (_Bool)_maybeQueueFrame:(id)arg1 referenceFrames:(id)arg2 dests:(id)arg3 renderLocation:(const struct FxDeviceSet *)arg4 onlyGiveHeliumFullyDecoded:(_Bool)arg5 outOfOrderCount:(int *)arg6 qInfo:(id)arg7;
- (id)_copyDestsToSkipForTime:(CDStruct_1b6d18a9)arg1 destList:(id)arg2;
- (void)_transferReusableFlattenedFrames:(id)arg1 dests:(id)arg2 last:(id)arg3;
- (void)_advanceFramesWhileDestsFull:(id)arg1 destsCopy:(id)arg2 allowedWait:(double)arg3 frameDur:(CDStruct_1b6d18a9)arg4 qInfo:(id)arg5;
- (int)_advanceFrames:(id)arg1 rate:(double)arg2 destsCopy:(id)arg3 renderLocation:(const struct FxDeviceSet *)arg4 testForAbort:(CDUnknownBlockType)arg5 retAnythingLeftToAdvance:(_Bool *)arg6 qInfo:(id)arg7;
- (_Bool)_maybeQueueFrameFrom:(id)arg1 referenceFrames:(id)arg2 dests:(id)arg3 renderLocation:(const struct FxDeviceSet *)arg4 onlyGiveHeliumFullyDecoded:(_Bool)arg5 testForAbort:(CDUnknownBlockType)arg6 qInfo:(id)arg7;
- (void)_logHeliumQueueLevels:(id)arg1;
- (BOOL)_buildOneFrame:(double)arg1 isPrerolling:(_Bool)arg2 retSchedTime:(CDStruct_1b6d18a9 *)arg3 maxDestLatency:(unsigned int)arg4;
- (BOOL)_currentScheduleIndexOutOfBounds:(double)arg1 frameDur:(CDStruct_1b6d18a9)arg2 maxDestLatency:(unsigned int)arg3 retSchedulableRange:(CDStruct_e83c9415 *)arg4;
- (int)_waitForSufficientlyScheduled:(id)arg1 maximumWait:(float)arg2 testForAbort:(CDUnknownBlockType)arg3;
- (_Bool)_sufficientlyScheduled:(id)arg1;
- (id)_firstFrameAwaitingScheduling:(id)arg1 retCount:(int *)arg2;
- (id)_copyCurrentFrames;
- (id)newFramesToQueue:(id)arg1 qInfo:(id)arg2;
- (id)_newChosenAndAlternates:(id)arg1 rate:(double)arg2 nowTime:(CDStruct_1b6d18a9)arg3 chosenFrame:(id)arg4 maxDestLatency:(unsigned int)arg5;
- (struct FFPlayerQueueInfoReport)_collectReadAheadInfoForFrames:(id)arg1 ignoringFrame:(id)arg2;
- (int)_cancelMostLateFrames:(id)arg1 rate:(double)arg2 nowTime:(CDStruct_1b6d18a9)arg3 chosenFrame:(id)arg4 maxDestLatency:(unsigned int)arg5 dests:(id)arg6 allowances:(CDStruct_869f9c67 *)arg7 reason:(int)arg8;
- (void)_cancelFrame:(id)arg1 andUpdateDropInfoDict:(id *)arg2 originalChoice:(id)arg3 originalChoiceString:(id *)arg4;
- (id)copyFirstOnTimeFrameFromArray:(id)arg1 rate:(double)arg2 nowTime:(CDStruct_1b6d18a9)arg3 maxDestLatency:(unsigned int)arg4 slowGraphBuildWorkaround:(_Bool)arg5;
- (void)_noteDroppedFrames:(id)arg1 dropReason:(int)arg2 effectiveRate:(double)arg3 alreadyHoldingPlayerLock:(_Bool)arg4;
- (void)_stopDueToDrop:(id)arg1;
- (void)fillStopDueToDropDict:(CDStruct_1b6d18a9)arg1 cause:(struct __CFString *)arg2 infoDict:(id)arg3 alreadyHoldingPlayerLock:(_Bool)arg4;
- (void)maybeReportPlaybackCompleteDropSkipWarning:(struct FFPlaybackCounterValues)arg1 oldRate:(float)arg2 canvasInfo:(struct FFPlaybackReportingCanvasUIInfo)arg3 hmdInfo:(struct FFPlaybackReportingHMD360Info)arg4;
- (void)_playCompletedWithHMDDrops:(id)arg1;
- (void)_playCompletedWithDrops:(id)arg1;
- (void)_generateOverlayTextures:(id)arg1 pmrMsg:(struct __CFString *)arg2;
- (void)_flushInternalDueToContentChange:(BOOL)arg1 contextChange:(BOOL)arg2 enableLiveEditsOptimization:(BOOL)arg3 trimmerCase:(BOOL)arg4;
- (void)_renScrubPrerollDelayBeforeEnqueueingFrame:(id)arg1;
- (_Bool)_internalWaitForFlags:(id)arg1 flagsToWaitFor:(unsigned int)arg2 bailTime:(CDStruct_1b6d18a9)arg3 label:(id)arg4;
- (void)inhibitLoopingUntilStop;
- (void)toggleLoopingPostroll;
- (void)toggleLoopingPreroll;
- (void)resetReturnToTime;
- (void)setReturnToTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)returnToTime;
- (void)resetLoopRange;
- (void)setAudioOnlyLooping:(BOOL)arg1;
- (void)setLoopRange:(CDStruct_e83c9415)arg1;
- (void)_recalculateLoopRange;
- (CDStruct_e83c9415)loopRange;
- (void)useGlobalLoopMode:(BOOL)arg1;
- (void)setLoop:(BOOL)arg1;
- (BOOL)loop;
- (CDStruct_1b6d18a9)time;
- (id)_newPlayerSchedDataForTime:(CDStruct_1b6d18a9)arg1 timeRepresented:(CDStruct_1b6d18a9)arg2 duration:(CDStruct_1b6d18a9)arg3 context1:(id)arg4 context2:(id)arg5 aaContext:(id)arg6 aaRepeats:(int)arg7;
- (id)lastFramePushed;
- (void)setLastFramePushed:(id)arg1;
- (void)delRecentlyPushedAtIndex:(unsigned long long)arg1;
- (void)_forgetAllFrames;
- (void)_forgetGraphedFrames:(int)arg1;
- (_Bool)_needAllAngles:(id)arg1;
- (BOOL)_needSecondField:(id)arg1;
- (void)_updateMasterClockForCurrentDests;
- (void)removeAllDestAudioRenders;
- (void)addDestAudioRender:(id)arg1;
- (void)removeDestAudio:(id)arg1;
- (void)addDestAudio:(id)arg1;
- (void)removeAllDestVideos;
- (void)removeDestVideo:(id)arg1;
- (void)addDestVideo:(id)arg1;
- (_Bool)_debug_startedPlayingRecently;
- (CDStruct_1b6d18a9)_calculateMinimumFrameDurForDests;
- (void)cancelWorkIfNoDestsRemain;
- (void)setupComplete;
- (struct FFPlaybackReportingHMD360Info)_collectHMDInfo:(id)arg1;
- (struct FFPlaybackReportingCanvasUIInfo)_collectCanvasInfo;
- (struct FFPlaybackReportingSequenceInfo)_collectSequenceInfo:(BOOL)arg1;
- (void)setSourceAudio:(id)arg1;
- (id)audioSource;
- (id)videoStream;
- (id)videoSource;
- (void)channelChangeEnd:(id)arg1;
- (void)channelChangeBegin:(id)arg1;
- (void)setEnableSnapBackModeForChannelManipulationFX:(int)arg1 sizeMode:(int)arg2;
- (void)videoRangeInvalidated:(id)arg1;
- (void)_videoRangeInvalidatedDuringPlayback:(id)arg1 workToDoUponLocking:(struct FFPlayerLockDeferredWork *)arg2 invalResponse:(int *)arg3;
- (void)_markAllDestsAsNeedingRedraw;
- (void)_forceAllDestsToRedraw;
- (void)setNeedsUpdate:(BOOL)arg1;
- (void)_setNeedsUpdateInternal:(BOOL)arg1 enableLiveEditsOptimization:(BOOL)arg2;
- (void)setContext:(id)arg1;
- (void)_waitForThreadToFinish;
- (void)shutdown;
- (void)dealloc;
- (BOOL)playsSelected;
- (void)setPlaysSelected:(BOOL)arg1;
- (id)initWithVideoSource:(id)arg1 fallbackVideoProps:(id)arg2 quality:(int)arg3 playbackContext:(id)arg4 mode:(int)arg5 overrideWorkingSpace:(int *)arg6;
- (id)initWithMode:(int)arg1;
- (void)_suspendBGOpsDuringPlayObserver:(id)arg1;
- (int)_holdOffOSServicesForUIPlayback;
- (void)playerRenderThreadMain:(id)arg1;
- (void)resetCurrentPlayInfo;
- (id)description;
- (void)_addDestDropInfo:(id)arg1 forDests:(id)arg2;
- (void)_summarizeLastLiveEdits;

@end

