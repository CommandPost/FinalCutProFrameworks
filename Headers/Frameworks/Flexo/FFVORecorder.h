//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMenu, NSMenuItem, NSTimer, NSURL;

@interface FFVORecorder : NSObject
{
    unsigned int _inputDevice;
    struct AURenderCallbackStruct _inputProc;
    struct AudioStreamBasicDescription _circularBufferFormat;
    NSURL *_writeFileURL;
    NSURL *_writeDirectoryURL;
    NSArray *_inputDevicesArray;
    NSArray *_monitorDevicesArray;
    NSMenu *_inputDeviceMenu;
    NSMenu *_monitorDeviceMenu;
    int _selectedInputTitleIndex;
    int _selectedMonitorTitleIndex;
    NSMenuItem *_inputDeviceMenuSelectedSubmenuItem;
    NSMenuItem *_monitorDeviceMenuSelectedSubmenuItem;
    unsigned int _monitorDevice;
    struct AudioStreamBasicDescription _monitorDeviceFormat;
    struct AURenderCallbackStruct _monitorProc;
    unsigned int _plugInDeviceID;
    unsigned int _aggregateDeviceID;
    id <FFVORecorderMeterDelegate> _meterDelegate;
    NSTimer *_animationTimer;
    NSTimer *_spotlightHoldoffTimer;
    struct __CFUUID *_recordTaskReference;
    unsigned int *_recordVolumeControlArray;
    unsigned int _recordVolumeControlArrayNumItems;
    struct AudioValueRange _recordGainRangeIndB;
    struct ComponentInstanceRecord *_inputComponentInstance;
    struct FFAudioFile *_writeFile;
    struct FFAudioBufferListCircularBuffer *_circularBuffer;
    CDStruct_1b6d18a9 _captureStartTime;
    struct FFAudioBufferList *_audioBufferPull;
    struct FFAudioBufferList *_audioBufferMonitoring;
    struct ComponentInstanceRecord *_monitorComponentInstance;
    struct OpaqueAudioConverter *_monitorFormatConverter;
    struct WorkerThread *_workerThread;
    struct FFAudioDiskWriteTask *_workerTask;
    BOOL _monitorMute;
    BOOL _writeToFile;
    float _meterLevels[6];
    float _recordGainScalar;
    float _monitorGainScalar;
    BOOL _inputProcExecuting;
    BOOL _monitorProcExecuting;
    struct CAMutex *_recordProcMutex;
    struct CAMutex *_monitorProcMutex;
    struct OpaqueAudioConverter *_audioConverterChannelExtraction;
    unsigned int _inputDeviceBaseChannel;
    unsigned int _inputNumChannels;
    struct AudioStreamBasicDescription _inputDeviceFormat;
    unsigned int _monitorDeviceBaseChannel;
    unsigned int _monitorNumChannels;
}

+ (BOOL)recordingInProgressSomewhere;
- (int)_fireAnimationTimer:(id)arg1;
- (int)_fireSpotlightHoldoffTimer:(id)arg1;
- (BOOL)_haveReceivedAudioIO;
- (void)_readIODefaultForKey:(id)arg1 device:(unsigned int *)arg2 baseChannel:(unsigned int *)arg3 numChannels:(unsigned int *)arg4 usingMenu:(id)arg5 selectedSubmenuItem:(id *)arg6;
- (void)_readIODefaultForKey:(id)arg1 device:(unsigned int *)arg2 baseChannel:(unsigned int *)arg3 numChannels:(unsigned int *)arg4;
- (void)_writeDefaultForIOKey:(id)arg1 device:(unsigned int)arg2 baseChannel:(unsigned int)arg3 numChannels:(unsigned int)arg4;
- (void)_setUpInputDevice;
- (void)_setUpMonitorDevice;
- (void)_setUpInputComponent;
- (void)_setUpMonitorComponent;
- (void)_setUpAggregateDevice;
- (void)_setUpDeviceArrays;
- (void)_setUpInputCapture;
- (void)_setUpMonitoring;
- (void)_setUpRecordGain;
- (void)_startCapture;
- (void)_stopCapture;
- (void)_tearDownInputCapture;
- (void)_tearDownInputDevice;
- (void)_tearDownMonitorDevice;
- (void)_tearDownMonitorComponent;
- (void)_tearDownInputComponent;
- (void)_tearDownAggregateDevice;
- (void)_tearDownMonitoring;
- (void)_closeWriteFile;
- (void)_closeWriteFileAndRemoveIfEmpty;
- (void)_writeFileToURL:(id)arg1;
- (id)_generateUniqueURLInDirectory:(id)arg1;
- (void)_setupWritingToFileAtURL:(id)arg1;
- (void)_setupWritingToUniqueFileInDirectory:(id)arg1;
- (id)init;
- (id)initWithMeterDelegate:(id)arg1;
- (id)initWithFileBasePath:(id)arg1;
- (void)dealloc;
- (void)shutDown;
- (unsigned long long)getMeterLevelsIndB:(float *)arg1 maxChannelCount:(unsigned long long)arg2;
- (void)changeInputDevice:(id)arg1;
- (void)changeMonitorDevice:(id)arg1;
- (id)getInputDeviceTitlesAndSelectedIndex:(long long *)arg1;
- (id)getMonitorDeviceTitlesAndSelectedIndex:(long long *)arg1;
- (id)getInputDeviceMenuAndSelectedSubmenuItem:(id *)arg1;
- (id)getMonitorDeviceMenuAndSelectedSubmenuItem:(id *)arg1;
- (id)startRecordWithTimeStamp:(CDStruct_1b6d18a9)arg1;
- (void)stopRecord;
- (BOOL)recordingInProgress;
- (void)writeFileToURL:(id)arg1;
- (id)writeFileToUniqueFileInDirectory:(id)arg1;
- (void)setRecordGaindB:(float)arg1;
- (float)getRecordGaindB;
- (struct AudioValueRange)getRecordGainRangeIndB;
- (void)setMonitorGaindB:(float)arg1;
- (void)setMonitorMute:(BOOL)arg1;
@property(retain) id <FFVORecorderMeterDelegate> meterDelegate; // @synthesize meterDelegate=_meterDelegate;
@property(readonly) BOOL monitorMute; // @synthesize monitorMute=_monitorMute;
@property(readonly) struct AudioStreamBasicDescription inputDeviceFormat; // @synthesize inputDeviceFormat=_inputDeviceFormat;
@property(readonly) struct ComponentInstanceRecord *monitorComponentInstance; // @synthesize monitorComponentInstance=_monitorComponentInstance;
@property(readonly) struct ComponentInstanceRecord *inputComponentInstance; // @synthesize inputComponentInstance=_inputComponentInstance;
@property(readonly) unsigned int monitorDevice; // @synthesize monitorDevice=_monitorDevice;
@property(readonly) unsigned int inputChannelCount; // @synthesize inputChannelCount=_inputNumChannels;
@property(readonly) unsigned int inputDevice; // @synthesize inputDevice=_inputDevice;

@end

