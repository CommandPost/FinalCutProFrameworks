//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Flexo/FFBackgroundTask.h>

#import <Flexo/FFBackgroundTaskTarget-Protocol.h>
#import <Flexo/FFStorageLocationOutOfDiskSpaceProtocol-Protocol.h>

@class FFStorageLocation, NSData, NSError, NSMutableDictionary, NSObject, NSSet, NSURL, NSURLSessionDownloadTask;
@protocol OS_dispatch_semaphore;

@interface FFURLDownloadTask : FFBackgroundTask <FFBackgroundTaskTarget, FFStorageLocationOutOfDiskSpaceProtocol>
{
    NSObject<OS_dispatch_semaphore> *_semaphore;
    FFStorageLocation *_currentStorageLocation;
    CDUnknownBlockType _pauseResumeBlock;
    int _state;
    NSData *_resumeData;
    NSURL *_destinationURL;
    NSSet *_assetsInUse;
    NSSet *_librariesInUse;
    NSError *_error;
    long long _downloadBytesExpected;
    long long _downloadBytesReceived;
    NSMutableDictionary *_userInfo;
    NSURLSessionDownloadTask *_sessionDownloadTask;
}

@property(retain, nonatomic) NSURLSessionDownloadTask *sessionDownloadTask; // @synthesize sessionDownloadTask=_sessionDownloadTask;
@property(copy) CDUnknownBlockType pauseResumeBlock; // @synthesize pauseResumeBlock=_pauseResumeBlock;
@property(retain, nonatomic) NSMutableDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property long long downloadBytesReceived; // @synthesize downloadBytesReceived=_downloadBytesReceived;
@property long long downloadBytesExpected; // @synthesize downloadBytesExpected=_downloadBytesExpected;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSSet *librariesInUse; // @synthesize librariesInUse=_librariesInUse;
@property(retain, nonatomic) NSSet *assetsInUse; // @synthesize assetsInUse=_assetsInUse;
@property(retain, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(retain, nonatomic) NSData *resumeData; // @synthesize resumeData=_resumeData;
@property(nonatomic) int state; // @synthesize state=_state;
- (void)stopWritingFilesToLocation:(id)arg1;
- (void)resetStorageLocationObserver;
- (id)downloadTaskFileURL;
- (void)unregisterAsDiskSpaceObserverIfNeeded;
- (void)registerAsDiskSpaceObserverForURL:(id)arg1;
- (void)downloadToDestinationIfSupported;
- (BOOL)isDownloadToDestinationSupported;
- (BOOL)usesLibrary:(id)arg1;
- (id)librariesInUse:(id)arg1;
- (id)assetsInUse:(id)arg1;
- (void)canceledTask:(id)arg1;
- (void)resumedTask:(id)arg1;
- (void)pausedTask:(id)arg1;
- (void)startDownload:(id)arg1 onTask:(id)arg2;
- (void)didCompleteWithError:(id)arg1;
- (void)didFinishDownloadingToURL:(id)arg1 withResponse:(id)arg2;
- (void)setBytesReceived:(long long)arg1 bytesExpected:(long long)arg2;
- (void)startTask;
- (void)runTask;
- (void)replaceSessionDownloadTaskWithTask:(id)arg1;
- (void)runStateLoop;
- (void)_setState:(int)arg1;
- (void)signalState:(int)arg1;
- (void)dealloc;
- (id)initWithSessionDownloadTask:(id)arg1;

@end

