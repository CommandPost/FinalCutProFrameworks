//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "CALayerDelegate.h"

@class CAMetalLayer, NSString;

@interface OZMetalLayerView : NSView <CALayerDelegate>
{
    float _width;
    float _height;
    BOOL _needsToneMappingAndColorSpaceSetup;
    CAMetalLayer *_metalLayer;
    BOOL _needHDROutputBuffer;
    struct HGRef<HGBuffer> _outputBuffer;
    struct HGRef<HGGLRenderer> _renderer;
    struct PCNSRef<NSOpenGLContext *> _glContext;
    int _currentVirtualScreen;
    struct PCNSRef<id<MTLCommandQueue>> _commandQueue;
    struct PCNSRef<OZMetalLayerViewBlitter *> _blitter;
    struct CGSize _drawableSize;
    id <MTLDevice> _device;
}

@property(retain) id <MTLDevice> device; // @synthesize device=_device;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setNeedsToneMappingAndColorSpaceSetup;
- (int)currentVirtualScreen;
- (id)openGLContext;
- (void)initOpenGLContext;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
-     // Error parsing type: v24@0:8^{HGBuffer=^^?{atomic<unsigned int>=AI}ii{HGRect=iiii}{HGRect=iiii}QQQ^v^v{HGEdgePolicy=i[4f]}^{HGObject}}16, name: drawToBuffer:
- (void)drawRect:(struct CGRect)arg1;
- (void)draw;
@property(nonatomic) unsigned long long colorPixelFormat;
@property(nonatomic) struct CGColorSpace *colorspace;
@property(readonly) CAMetalLayer *metalLayer;
- (void)setupLayers;
- (struct CGColor *)matteColor;
- (BOOL)isVisibleOnAnyScreen;
- (void)setupToneMappingModeAndColorSpace;
- (void)setUpBlitter:(unsigned long long)arg1;
- (BOOL)setupOutputBuffer;
- (const struct HGGPUComputeDevice *)gpu;
// Error parsing type for property outputBuffer:
// Property attributes: T^{HGBuffer=^^?{atomic<unsigned int>=AI}ii{HGRect=iiii}{HGRect=iiii}QQQ^v^v{HGEdgePolicy=i[4f]}^{HGObject}},R

// Error parsing type for property renderer:
// Property attributes: T^{HGGLRenderer=^^?{atomic<unsigned int>=AI}^{HGNode}^{HGBitmap}[8{HGRendererTextureUnit=^{HGBitmap}^{HGTransform}i}]{vector<DepthBufferManager *, std::__1::allocator<DepthBufferManager *> >=^^{DepthBufferManager}^^{DepthBufferManager}{__compressed_pair<DepthBufferManager **, std::__1::allocator<DepthBufferManager *> >=^^{DepthBufferManager}}}{vector<HGExecutionUnit *, std::__1::allocator<HGExecutionUnit *> >=^^{HGExecutionUnit}^^{HGExecutionUnit}{__compressed_pair<HGExecutionUnit **, std::__1::allocator<HGExecutionUnit *> >=^^{HGExecutionUnit}}}^{HGExecutionData}^{HGSyncData}{_opaque_pthread_rwlock_t=q[192c]}{_opaque_pthread_mutex_t=q[56c]}^{HGLUTCacheManager}^{GraphStats}^{RendererStats}iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii{HGCache=^^?i^{HGCacheEntry}^{HGCacheEntry}^{HGCacheEntry}{_opaque_pthread_mutex_t=q[56c]}}BBBI[2^{HGLimits}]i{HGDotGraph={map<unsigned long, HGDotGraph::Node, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, HGDotGraph::Node> > >={__tree<std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, HGDotGraph::Node> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, HGDotGraph::Node>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, HGDotGraph::Node>, std::__1::less<unsigned long>, true> >=Q}}}{map<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge> > >={__tree<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::__map_value_compare<std::__1::tuple<unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned long, unsigned long>, HGDotGraph::Edge>, std::__1::less<std::__1::tuple<unsigned long, unsigned long> >, true> >=Q}}}^{__sFILE}BB{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}{HGBufferDumper={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iiB}IiQQi^{HGLimitsCache}^{HGRenderQueue}^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{HGRef<HGMetalContext>=^{HGMetalContext}}{map<const HGMetalDeviceInfo *, HGRef<HGMetalContext>, std::__1::less<const HGMetalDeviceInfo *>, std::__1::allocator<std::__1::pair<const HGMetalDeviceInfo *const, HGRef<HGMetalContext> > > >={__tree<std::__1::__value_type<const HGMetalDeviceInfo *, HGRef<HGMetalContext> >, std::__1::__map_value_compare<const HGMetalDeviceInfo *, std::__1::__value_type<const HGMetalDeviceInfo *, HGRef<HGMetalContext> >, std::__1::less<const HGMetalDeviceInfo *>, true>, std::__1::allocator<std::__1::__value_type<const HGMetalDeviceInfo *, HGRef<HGMetalContext> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const HGMetalDeviceInfo *, HGRef<HGMetalContext> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<const HGMetalDeviceInfo *, std::__1::__value_type<const HGMetalDeviceInfo *, HGRef<HGMetalContext> >, std::__1::less<const HGMetalDeviceInfo *>, true> >=Q}}}[6{HGRef<HGGLContext>=^{HGGLContext}}]i^{HGGLState}{HGRef<HGCVGLTextureFactory>=^{HGCVGLTextureFactory}}IIIII^{HGTransform}{vector<HGBitmap *, std::__1::allocator<HGBitmap *> >=^^{HGBitmap}^^{HGBitmap}{__compressed_pair<HGBitmap **, std::__1::allocator<HGBitmap *> >=^^{HGBitmap}}}iiiiQCBBi^{HGGLShaderCache}^{HGHandler}^{HGHandler}^{HGHandler}^{HGMetalCommandBufferRef}^{HGMetalSharedEvent}Bi^{HGBitmap}^{HGBitmap}^{HGGLTexture}^{HGMetalTexture}{deque<HGBitmap *, std::__1::allocator<HGBitmap *> >={__split_buffer<HGBitmap **, std::__1::allocator<HGBitmap **> >=^^^{HGBitmap}^^^{HGBitmap}^^^{HGBitmap}{__compressed_pair<HGBitmap ***, std::__1::allocator<HGBitmap **> >=^^^{HGBitmap}}}Q{__compressed_pair<unsigned long, std::__1::allocator<HGBitmap *> >=Q}}iI^{vector<HGRef<HGPixelBufferObj>, std::__1::allocator<HGRef<HGPixelBufferObj> > >}{set<HGNode *, std::__1::less<HGNode *>, std::__1::allocator<HGNode *> >={__tree<HGNode *, std::__1::less<HGNode *>, std::__1::allocator<HGNode *> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<HGNode *, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<HGNode *> >=Q}}}^{_cl_command_queue}^{HGTextureManager}},R

- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)resizeDrawableTo:(struct CGSize)arg1 draw:(BOOL)arg2;
- (void)viewDidChangeBackingProperties;
- (struct CGSize)pixelSizeFromPointSize:(struct CGSize)arg1;
- (float)backingScale;
- (struct CGRect)getPixelBounds;
- (struct CGRect)getIntegralBounds;
- (float)getHeight;
- (float)getWidth;
- (void)displayLayer:(id)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)postRedisplay;
- (void)notifyViewFrameChanged:(id)arg1;
- (void)viewFrameChanged;
- (void)notifyDisplayChanged:(id)arg1;
- (void)displayChanged;
- (void)initializeRenderer:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)setReduceMetalShaderPrecision:(_Bool)arg1;
- (void)setNeedHDRBuffer:(BOOL)arg1;
- (void)resetOutputBuffer;
- (id)commandQueue;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

