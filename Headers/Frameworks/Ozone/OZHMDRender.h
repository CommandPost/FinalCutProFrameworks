//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 11 2021 20:53:35).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ProCore/PCHMDRender.h>

#import <Ozone/OZRenderClient-Protocol.h>

@class OZViewer;

@interface OZHMDRender : PCHMDRender <OZRenderClient>
{
    OZViewer *_viewer;
    struct OZViewerState *_viewState;
    int _canvasVirtualScreen;
    shared_ptr_80358429 _gpu;
    struct LiRenderingTechnology _renderingTech;
    PCQuat_8a184614 _defaultRotation;
    struct atomic<bool> _resetHMDRotation;
    struct atomic<OZScene *> _scene;
    shared_ptr_8628efdd _equirectForHMD;
    struct HMDTexture _renderedTexes[6];
    int _renderOffset;
    struct __IOSurface *_renderedIOSurfaces[2];
    BOOL _initialized;
    BOOL _initializedForHMDSession;
}

+ (void)resetScene;
+ (void)displayFailedCheckAlert:(int)arg1;
+ (BOOL)enableHMDWithScene:(struct OZScene *)arg1;
+ (BOOL)isRenderingToHMD;
+ (id)instance;
- (id).cxx_construct;
- (void).cxx_destruct;
@property BOOL initializedForHMDSession; // @synthesize initializedForHMDSession=_initializedForHMDSession;
@property(readonly, getter=isInitialized) BOOL initialized; // @synthesize initialized=_initialized;
- (void)renderNodeCancelled:(const CDStruct_1b6d18a9 *)arg1 userData:(void *)arg2;
- (void)renderNodeFinished:(struct OZHGRenderNode *)arg1 result:(const shared_ptr_3bf61ddf *)arg2;
- (shared_ptr_80358429)destinationDevice;
- (int)currentVirtualScreen;
- (void)resetScene;
- (void)setScene:(struct OZScene *)arg1;
- (void)setViewerState:(struct OZViewerState *)arg1;
- (PCQuat_8a184614)getCurrentRotation;
- (PCQuat_8a184614)getDefaultRotation;
- (struct __IOSurface **)getFrame:(struct HMDMatrices *)arg1 statisticsData:(struct PCHMDStats *)arg2;
- (void)customizeRenderParams:(struct OZRenderParams *)arg1;
- (void)resetHMDRotation;
- (BOOL)setRenderingToHMD:(BOOL)arg1;
- (void)findHMDVirtualScreen;
- (void)postInit:(BOOL)arg1;
- (void)shutdownHMD;
- (void)dealloc;
- (void)initialize;
- (void)setCanvasVirtualScreen:(int)arg1;
- (int)canvasVirtualScreen;
- (void)setViewer:(id)arg1;

@end

