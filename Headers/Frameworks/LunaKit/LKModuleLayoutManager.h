//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "LKCreateLayoutDialogDelegate.h"

@class LKModuleLayoutDisplayName, LKModuleLayoutUpdater, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSUUID;

@interface LKModuleLayoutManager : NSObject <LKCreateLayoutDialogDelegate>
{
    NSString *_layoutRootFolderName;
    NSString *_customLayoutExtension;
    NSUUID *_saveStateLayoutIdentifier;
    LKModuleLayoutDisplayName *_saveStateLayoutDisplayName;
    LKModuleLayoutUpdater *_updater;
    id <LKModuleLayoutManagerDelegate> _delegate;
    NSMutableArray *_windowControllers;
    NSMutableArray *_categoryArrays;
    NSMutableArray *_layouts;
    NSMutableSet *_editedLayouts;
    NSMutableSet *_displayNamesForLayoutsToBeRemoved;
    NSString *_executableName;
    NSUUID *_currentLayoutIdentifier;
    NSMutableDictionary *_errorsWhileLoadingLayout;
    struct {
        unsigned int autosizesLayouts:1;
        unsigned int needsToUpdateTheSaveStateLayout:1;
        unsigned int suspendUpdatesToSaveStateLayout:1;
        unsigned int readingLayout:1;
        unsigned int alreadyUpdatingSaveStateLayout:1;
    } _flags;
}

+ (BOOL)_isTesting;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (Class)moduleLayoutClass;
+ (Class)createDialogClass;
+ (BOOL)_sharedInstanceExists;
+ (void)destroySharedInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *errorsWhileLoadingLayout; // @synthesize errorsWhileLoadingLayout=_errorsWhileLoadingLayout;
@property(copy, nonatomic) NSString *executableName; // @synthesize executableName=_executableName;
@property(retain, nonatomic) NSMutableSet *displayNamesForLayoutsToBeRemoved; // @synthesize displayNamesForLayoutsToBeRemoved=_displayNamesForLayoutsToBeRemoved;
@property(retain, nonatomic) NSMutableSet *editedLayouts; // @synthesize editedLayouts=_editedLayouts;
@property(retain, nonatomic) NSMutableArray *layouts; // @synthesize layouts=_layouts;
@property(retain, nonatomic) NSMutableArray *categoryArrays; // @synthesize categoryArrays=_categoryArrays;
@property(retain, nonatomic) NSMutableArray *windowControllers; // @synthesize windowControllers=_windowControllers;
@property(nonatomic) id <LKModuleLayoutManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) LKModuleLayoutUpdater *updater; // @synthesize updater=_updater;
@property(copy, nonatomic) LKModuleLayoutDisplayName *saveStateLayoutDisplayName; // @synthesize saveStateLayoutDisplayName=_saveStateLayoutDisplayName;
@property(copy, nonatomic) NSUUID *saveStateLayoutIdentifier; // @synthesize saveStateLayoutIdentifier=_saveStateLayoutIdentifier;
@property(copy, nonatomic) NSUUID *currentLayoutIdentifier; // @synthesize currentLayoutIdentifier=_currentLayoutIdentifier;
@property(copy, nonatomic) NSString *customLayoutExtension; // @synthesize customLayoutExtension=_customLayoutExtension;
@property(copy, nonatomic) NSString *layoutRootFolderName; // @synthesize layoutRootFolderName=_layoutRootFolderName;
- (id)cancelButtonLabel;
- (id)replaceButtonLabel;
- (id)replaceDescriptionWithLayoutDisplayName:(id)arg1;
- (id)replaceTitle;
- (id)cannotSaveDescriptionWithLayoutDisplayName:(id)arg1;
- (id)cannotSaveTitle;
- (id)saveDescription;
- (id)saveTitle;
- (unsigned long long)validateModuleLayoutDisplayName:(id)arg1;
- (id)uniqueLayoutDisplayName;
- (id)defaultDisplayNameForNewModuleLayout;
- (id)mainWindowModuleClassName;
- (unsigned long long)compatibleAppLayoutVersion;
@property(nonatomic) BOOL isReadingLayout; // @dynamic isReadingLayout;
@property(nonatomic) BOOL autosizesLayouts; // @dynamic autosizesLayouts;
- (id)layoutDocument;
- (struct CGSize)_currentScreenSize;
- (id)additionalLayoutInformationDictionary;
- (id)layoutArray;
- (void)_willFinishChangingModuleLayout;
- (void)applyModuleLayoutInner:(id)arg1;
- (void)activeModuleIfNotHidden:(id)arg1;
- (void)activateModuleWithIdentifier:(id)arg1;
- (id)firstRegisteredAncestorOf:(id)arg1;
- (id)identifierForKeyWindowActiveModule;
- (void)preserveActiveModuleOverBlock:(CDUnknownBlockType)arg1;
- (void)holdCurrentDocumentWhileExecutingBlock:(CDUnknownBlockType)arg1;
- (id)newZoomableWindowModulesWithWindowModules:(id)arg1 andNonZoomableWindows:(id)arg2;
- (void)partitionModules:(id)arg1 usingPredicate:(id)arg2 matchingModules:(id *)arg3 otherModules:(id *)arg4;
- (id)predicateIsWindowModule;
- (void)displayLayoutWithNonWindowModules:(id)arg1 windowModules:(id)arg2;
- (void)zoomWindowsForModules:(id)arg1;
- (void)zoomWindowsIfNecessaryWithModuleLayout:(id)arg1 zoomableWindowModules:(id)arg2;
- (void)closeOldWindowControllers:(id)arg1;
- (void)applyVisibleChangesWithModuleLayout:(id)arg1 nonWindowModules:(id)arg2 oldWindowControllers:(id)arg3 windowModules:(id)arg4 zoomableWindowModules:(id)arg5;
- (void)executeBlockWithDisabledScreenUpdates:(CDUnknownBlockType)arg1;
- (void)applyVisibleChangesWithoutScreenUpdatesWithModuleLayout:(id)arg1 nonWindowModules:(id)arg2 oldWindowControllers:(id)arg3 windowModules:(id)arg4 zoomableWindowModules:(id)arg5;
- (void)collectAllModules:(id)arg1;
- (void)createTopLevelModuleWithLayoutDictionary:(id)arg1 allModules:(id)arg2 nonZoomableWindows:(id)arg3 oldWindowControllers:(id)arg4;
- (void)recursivelyCreateModulesWithLayout:(id)arg1 allModules:(id)arg2 nonZoomableWindows:(id)arg3 oldWindowControllers:(id)arg4;
- (void)readLayoutWithBlock:(CDUnknownBlockType)arg1;
- (void)recursivelyReadLayoutAndCreateModules:(id)arg1 layout:(id)arg2 nonZoomableWindows:(id)arg3 oldWindowControllers:(id)arg4;
- (BOOL)isLayoutForMainWindowModule:(id)arg1;
- (void)createModuleWithLayoutDictionary:(id)arg1 allModules:(id)arg2;
- (void)createMainWindowModuleWithLayoutDictionary:(id)arg1 allModules:(id)arg2 nonZoomableWindows:(id)arg3 oldWindowControllers:(id)arg4;
- (void)requestKeepWindowForExistingModule:(id)arg1 nonZoomableWindows:(id)arg2 oldWindowControllers:(id)arg3;
- (id)newExistingRegisteredModuleMatchingLayoutDictionary:(id)arg1;
- (id)newRegisteredModuleWithLayoutDictionary:(id)arg1;
- (id)newRegisteredModuleWithClassName:(id)arg1;
- (void)requestWindowRemainUnzoomedForModule:(id)arg1 nonZoomableWindows:(id)arg2;
- (void)requestWindowRemainOpenForModule:(id)arg1 oldWindowControllers:(id)arg2;
- (id)identifierForLayout:(id)arg1;
- (void)applyModuleLayout:(id)arg1;
- (void)saveLayout:(id)arg1;
- (void)saveCurrentLayoutUsingIdentifier:(id)arg1 andDisplayName:(id)arg2;
- (void)saveChangedLayouts;
- (void)_unscheduleRemovalOfLayoutFileWithDisplayName:(id)arg1;
- (void)_scheduleRemovalOfLayoutFileWithDisplayName:(id)arg1;
- (void)moduleLayoutDidChangeName:(id)arg1 originalDisplayName:(id)arg2;
- (void)moduleLayoutDidChange:(id)arg1;
- (void)removeModuleLayout:(id)arg1;
- (void)_addModuleLayout:(id)arg1;
- (BOOL)addModuleLayout:(id)arg1;
- (void)_updateSaveStateLayout;
- (void)updateSaveStateLayoutIfNeeded;
- (void)updateSaveStateLayoutAndSuspend;
- (id)newSaveStateModuleLayout;
- (id)saveStateModuleLayoutCreateIfNeeded:(BOOL)arg1 originalLayout:(id *)arg2;
- (id)saveStateModuleLayout;
- (void)removeWindowController:(id)arg1;
- (void)addWindowController:(id)arg1;
- (id)moduleWithTag:(long long)arg1;
- (id)modulePassingTest:(CDUnknownBlockType)arg1;
- (void)unregisterModule:(id)arg1;
- (void)registerModule:(id)arg1;
- (id)moduleWithIdentifier:(id)arg1;
- (id)moduleLayoutWithIdentifier:(id)arg1 inCategory:(int)arg2;
- (id)moduleLayoutWithIdentifier:(id)arg1 error:(id *)arg2;
- (id)moduleLayoutWithIdentifier:(id)arg1;
- (id)moduleLayoutWithDisplayName:(id)arg1;
- (id)currentModuleLayout;
- (void)_loadLayoutsFromDisk;
- (void)reloadLayouts;
- (id)sortedModuleLayoutsForCategory:(int)arg1;
- (id)moduleLayoutsForCategory:(int)arg1;
- (BOOL)isSaveStateLayout:(id)arg1;
- (id)moduleLayouts;
- (void)openUserLayoutsFolder;
- (BOOL)canApplyLayout:(id)arg1 error:(id *)arg2;
- (BOOL)canApplyLayout:(id)arg1;
- (void)applyLayout:(id)arg1;
- (void)resetCurrentLayout:(id)arg1;
- (id)firstLaunchModuleLayout;
- (void)currentLayoutSaveAs;
- (void)currentLayoutSave;
- (id)pathForLayout:(id)arg1;
- (id)directoryForCategory:(int)arg1;
- (id)saveStateLayoutPath;
- (id)userLayoutsDirectory;
- (id)sharedLayoutsDirectory;
- (id)factoryLayoutsDirectory;
- (id)layoutPathFromFolder:(id)arg1 withDisplayName:(id)arg2 andExtension:(id)arg3;
@property(nonatomic) BOOL suspendUpdatesToSaveStateLayout; // @dynamic suspendUpdatesToSaveStateLayout;
@property(nonatomic) BOOL needsToUpdateTheSaveStateLayout; // @dynamic needsToUpdateTheSaveStateLayout;
- (void)documentWasAdded:(id)arg1;
- (void)documentDidChange:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillHide:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

