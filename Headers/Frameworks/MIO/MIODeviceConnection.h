//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSDictionary, NSNumber, NSString;

@interface MIODeviceConnection : NSObject
{
    unsigned int mCMIOObjectID;
    unsigned int mCMIOStreamID;
    unsigned int mFramerate;
    unsigned int mHeight;
    unsigned int mWidth;
    unsigned int mMultiplexerMode;
    unsigned int mCodecType;
    unsigned int mAVCSignalMode;
    unsigned int mAVCDeviceType;
    BOOL mNTSCRate;
    BOOL mAvailable;
    unsigned int remainOpenCount;
    NSString *mUID;
    BOOL mHasListener;
    BOOL mHasStreamListener;
    int mTimecodeFormat;
    int mTailClipTrimFrames;
    NSNumber *_canDoInput;
    NSNumber *_canDoOutput;
    NSString *mFilePath;
    NSArray *mInputFormats;
    NSString *mCurrentInputFormat;
    NSArray *mInputFrameRates;
    NSNumber *mCurrentInputFrameRate;
    struct opaqueCMFormatDescription *mCurrentFigFormatDescription;
    NSArray *mControls;
    NSArray *mOutputFormats;
    NSString *mCurrentOutputFormat;
    NSArray *mOutputFrameRates;
    NSNumber *mCurrentOutputFrameRate;
    BOOL mIsiSight;
    BOOL miSightHasIris;
    int miSightStatus;
    NSString *_customName;
}

+ (id)deviceConnectionWithCodecType:(unsigned int)arg1 forOutputToPath:(id)arg2;
+ (id)deviceConnectionWithCMIOObjectID:(unsigned int)arg1;
@property int iSightStatus; // @synthesize iSightStatus=miSightStatus;
@property BOOL iSightHasIris; // @synthesize iSightHasIris=miSightHasIris;
@property BOOL isiSight; // @synthesize isiSight=mIsiSight;
@property BOOL available; // @synthesize available=mAvailable;
@property NSDictionary *properties;
- (BOOL)canDoOutput;
- (BOOL)canDoInput;
- (int)tailClipTrimFrames;
- (id)fileProxyDevicePath;
- (BOOL)isFileProxyDevice;
- (int)format;
- (unsigned int)height;
- (unsigned int)width;
@property BOOL inputting;
- (void)setOutputDisplayOrder:(BOOL)arg1;
- (unsigned long long)outputNSScreenIndex;
- (void)setCurrentOutputConfigurationFromStreamID:(unsigned int)arg1;
@property(retain) NSNumber *currentOutputFrameRate;
@property(retain) NSNumber *currentInputFrameRate;
@property(readonly, retain) NSArray *controls; // @synthesize controls=mControls;
- (void)refreshFormats;
- (struct OpaqueCMClock *)clock;
- (struct opaqueCMFormatDescription *)currentOutputFormatDescription;
@property(retain) NSString *currentOutputFormat;
@property(readonly, retain) NSArray *outputFormats; // @synthesize outputFormats=mOutputFormats;
@property(readonly, retain) NSArray *outputFrameRates; // @synthesize outputFrameRates=mOutputFrameRates;
@property(readonly, retain) NSArray *inputFrameRates; // @synthesize inputFrameRates=mInputFrameRates;
@property(retain) NSString *currentInputFormat;
- (struct opaqueCMFormatDescription *)currentInputFormatDescription;
@property(readonly, retain) NSArray *inputFormats; // @synthesize inputFormats=mInputFormats;
- (id)availableFormats;
- (id)presentationDimensions;
- (id)currentFormat;
@property struct opaqueCMFormatDescription *currentFigFormatDescription;
- (unsigned int)avcDeviceType;
- (unsigned int)avcSignalMode;
- (unsigned int)codecType;
- (unsigned int)multiplexerMode;
- (void)setMultiplexerMode:(unsigned int)arg1;
- (BOOL)ntscRate;
- (id)framerateString;
- (id)customName;
- (void)setCustomName:(id)arg1;
- (id)displayName;
- (id)deviceName;
- (id)modelUID;
- (id)vendor;
- (unsigned int)vendorID;
- (CDStruct_1b6d18a9)frameduration;
- (int)timecodeFormat;
- (unsigned int)framerate;
- (id)UID;
- (unsigned int)cmioStreamID;
- (void)setCMIOStreamID:(unsigned int)arg1;
- (unsigned int)cmioObjectID;
- (void)setCMIOObjectID:(unsigned int)arg1;
- (BOOL)isOpen;
- (void)closeConnection;
- (BOOL)openConnection;
- (void)connectionWillBecomeUnavailable;
- (void)connectionDidBecomeAvailable;
- (void)determineiSightStatus:(BOOL)arg1 isInUse:(BOOL)arg2;
- (void)dealloc;
- (BOOL)configureDeviceFromConfigFile;
- (void)removeStreamListener;
- (void)addStreamListener;
- (void)removeDeviceListener;
- (void)addDeviceListener;
- (id)initWithCMIOObjectID:(unsigned int)arg1;
- (id)initWithCodecType:(unsigned int)arg1 forOutputToPath:(id)arg2;

@end

